Metadata-Version: 2.1
Name: sped-extractor
Version: 1.0.0
Summary: Extrai e interpreta os registros e os campos das tabelas dos manuais do SPED (Sistema P√∫blico de Escritura√ß√£o Digital), para os m√≥dulos ECD, ECF, EFD Contribui√ß√µes (PIS, COFINS) e EFD ICMS IPI.
Home-page: https://github.com/akretion/sped-extractor
Author: Akretion
Author-email: contact@akretion.com.br
License: MIT
Description: ==============
        sped-extractor
        ==============
        
        
        Esse package extrai as tabelas dos pdf das `especifica√ß√µes da SPED <http://sped.rfb.gov.br/pasta/show/9>`_ usando o package python `camelot`_ e cria arquivos CSV com as informa√ß√µes **dos registros e campos de cada m√≥dulo**, levemente formatados para ser utilizados por outros programas.
        
        Os m√≥dulos da SPED tratados por esse package s√£o :
        
        - `ECD <http://sped.rfb.gov.br/pasta/show/1569>`_
        - `ECF <http://sped.rfb.gov.br/pasta/show/1644>`_
        - `EFD Contribui√ß√µes (PIS, COFINS) <http://sped.rfb.gov.br/pasta/show/1989>`_
        - `EFD ICMS IPI <http://sped.rfb.gov.br/pasta/show/1573>`_
        
        üìö  Para cada m√≥dulo est√£o gerados 4 arquivos :
        
        - *MODULE_registers.csv* : a lista detalhada dos **registros** do m√≥dulo ``MODULE``.
        - *MODULE_accurate_fields.csv* : a lista das linhas dos **campos** de cada registro *como eles aparecem no pdf* das especifica√ß√µes (para conferir e melhorar o resultado da extra√ß√£o).
        - *MODULE_fields.csv* : a lista dos mesmos campos por√©m **com atributos "interpretados"**, utiliz√°veis mais facilmente por outros programas.
        - *MODULE_python-sped.json* : A lista dos blocos, registros e campos de cada m√≥dulo, formatada em JSON, seguindo o leiaute do package `python-sped`_ para ser utilizado por ele.
        
        
        **Table of contents**
        
        .. contents::
           :local:
        
        Arquivos extraidos
        ==================
        
        =============================  ===================================  ==========================  ===========================
        Registros                      CSV fi√©l                             CSV utiliz√°vel              JSON "tipo python-sped"
        =============================  ===================================  ==========================  ===========================
        ECD_registers.csv_             ECD_accurate_fields.csv_             ECD_fields.csv_             ECD_python-sped.json_
        ECF_registers.csv_             ECF_accurate_fields.csv_             ECF_fields.csv_             ECF_python-sped.json_
        EFD_ICMS_IPI_registers.csv_    EFD_ICMS_IPI_accurate_fields.csv_    EFD_ICMS_IPI_fields.csv_    EFD_ICMS_IPI_python-sped.json_
        EFD_PIS_COFINS_registers.csv_  EFD_PIS_COFINS_accurate_fields.csv_  EFD_PIS_COFINS_fields.csv_  EFD_PIS_COFINS_python-sped.json_
        =============================  ===================================  ==========================  ===========================
        
        Instala√ß√£o
        ============
        
        O package ``spedextractor`` da √∫ltima vers√£o de `camelot`_ para funcionar. Para isso precisa primeiro `instalar as depend√™ncias de camelot <https://camelot-py.readthedocs.io/en/master/user/install-deps.html>`_ ::
        
          $ apt install python3-tk ghostscript
        
        E depois instalar camelot a partir do reposit√≥rio github ::
        
          $ git clone https://www.github.com/camelot-dev/camelot
          $ cd camelot
          $ pip install ".[cv]"
        
        Uma vez `camelot`_ instalado, √© s√≥ baixar esse reposit√≥rio ::
        
          $ git clone https://github.com/akretion/sped-extractor/
        
        A pasta *spedextractor/* re√∫ne os scripts para baixar e extrair os registros e campos de cada m√≥dulo SPED enquanto a pasta *specs/* re√∫ne **os pdf** baixados, **os CSV** e JSON extra√≠dos, **os patches** poss√≠veis para essas extra√ß√µes al√©m das **infos para baixar os pdf**, agrupados pelo **ano de publica√ß√£o** das vers√µes dos pdf dos manuais da SPED :
        
        ::
        
          .
          ‚îú‚îÄ‚îÄ spedextractor
          |   [...]
          ‚îî‚îÄ‚îÄ specs
              ‚îú‚îÄ‚îÄ 2019
              |   [...]
              ‚îî‚îÄ‚îÄ 2020
                  ‚îú‚îÄ‚îÄ camelot_patch
                  ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ ecd_camelot_patch.csv
                  |   [...]
                  ‚îú‚îÄ‚îÄ download_info.csv
                  ‚îú‚îÄ‚îÄ ecd
                  ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ ecd_accurate_fields.csv
                  ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ ecd_fields.csv
                  ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ ecd_python-sped.json
                  ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ ecd_registers.csv
                  ‚îú‚îÄ‚îÄ ecf
                  |   [...]
                  ‚îú‚îÄ‚îÄ efd_icms_ipi
                  |   [...]
                  ‚îú‚îÄ‚îÄ efd_pis_cofins
                  |   [...]
                  ‚îî‚îÄ‚îÄ pdf
                      ‚îú‚îÄ‚îÄ ecd.pdf
                      ‚îú‚îÄ‚îÄ ecf.pdf
                      ‚îú‚îÄ‚îÄ efd_icms_ipi.pdf
                      ‚îî‚îÄ‚îÄ efd_pis_cofins.pdf
        
        Utiliza√ß√£o
        ==========
        
        Depois de ter baixado esse reposit√≥rio, todos os arquivos da pasta *spedextractor/* podem ser usados como Interface de linha de comando no terminal.
        
        1. üì• ``./download.sh`` : **Baixe os arquivos pdf** originais contendo as especifica√ß√µes da SPED :
        
          A op√ß√£o ``--year`` permite definir a vers√£o dos pdf do ano desejado. Se n√£o indicar nada os pdf os mais recentes ser√£o baixados.
        
        ::
        
          PATH_TO/sped-extractor/spedextractor$ $ ./download.py --year=2019
          Downloading pdf ECD 2019...
          Downloading pdf ECF 2019...
          Downloading pdf EFD_ICMS_IPI 2019...
          Downloading pdf EFD_PIS_COFINS 2019...
        
        Os links usados para baixar esses pdf se encontram no arquivo *download_info.csv* na pasta do ano de publica√ß√£o das vers√µes dos pdf a baixar.
        
          ‚ö†Ô∏è  √â importante diferenciar o ano de *publica√ß√£o* dos manuais do ano de *aplica√ß√£o* desses manuais. Assim, os pdf baixados na pasta **2020/** correspondem √†s tabelas para serem usadas principalmente no ano-calend√°rio de **2019** (informa√ß√£o anotada na colona ``date_init`` do arquivo *download_info.csv*).
        
        
        2. ‚õèÔ∏è ``./extract_csv.py`` : Use `camelot`_ para **extrair as tabelas dos pdf** e coloque os arquivos CSV extraidos na pasta */specs/YEAR/MODULE/raw_camelot_csv/* :
        
          A op√ß√£o ``--limit=n`` √© facultativa para extrair apenas as tabelas das 'n' primeiras p√°ginas.
        
        ::
        
          PATH_TO/sped-extractor/spedextractor$ ./extract_csv.py --limit=5
          Extracting tables from SPED pdf. It can take a while (easily 20 minutes)
          > ECD - 5 pages
              extracting pages 0 to 5...
          > ECF - 5 pages
              extracting pages 0 to 5...
          [...]
        
        3. üèóÔ∏è ``./build_csv.py`` : Percorre os CSV da pasta */specs/MODULE/raw_camelot_csv/* e **cria 3 arquivos CSV** por m√≥dulo :
        
          O ``./build_csv.py`` aplica linhas corretivas escritas em duro na pasta *spedextractor/YEAR/camelot_patch/* por padr√£o. Para n√£o aplicar essas corre√ß√µes, usar a op√ß√£o ``--no-patch``.
        
        ::
        
          PATH_TO/sped-extractor/spedextractor$ ./build_csv.py --no-patch
        
          Building CSV files for ECD 2020...
          > ecd_accurate_fields.csv
          > ecd_registers.csv
              70 registers catched in ECD
          > ecd_fields.csv
              323 fields catched in ECD
        
          Building CSV files for ECF 2020...
          > ecf_accurate_fields.csv
          > ecf_registers.csv
              179 registers catched in ECF
          > ecf_fields.csv
              903 fields catched in ECF
        
          [...]
        
        
        -------
        
        Al√©m desses scripts b√°sicos, existe tamb√©m o ``./build_python-sped_json.py`` para **criar um arquivo JSON "tipo python-sped"** por m√≥dulo com a lista dos campos com atributos "interpretados" :
        
          ‚ö†Ô∏è  Da mesma maneira que para usar ``./build_csv.py``, √© necess√°rio extrair primeiro as tabelas dos pdf com ``./extract_csv.py`` antes de usar ``./build_python-sped_json.py``
        
        ::
        
          PATH_TO/sped-extractor/spedextractor$ ./build_python-sped_json.py
          Building JSON files for each modules...
          > ecd_python-sped.json
          > ecf_python-sped.json
          [...]
        
        Configura√ß√£o
        ============
        
        Patches
        ~~~~~~~
        
        Apesar de `camelot`_ ser o melhor package python para extrair tabelas de pdf, ele n√£o √© 100% perfeito. No entanto, **√© poss√≠vel substituir linhas de campos extraidas incorretamente** por linhas certas registradas manualmente.
        
        Para isso basta escrever a linha correta no arquivo *spedextractor/YEAR/camelot_patch/MODULE_camelot_patch.csv* para ela ser applicada no lugar certo no CSV *MODULE_accurate_fields.csv*.
        
          üîé  O ``./build_csv.py`` aplica as linhas corretivas por padr√£o. Para n√£o aplicar essas corre√ß√µes, usar a op√ß√£o ``--no-patch``.
        
        Cabe√ßalhos de M√≥dulos
        ~~~~~~~~~~~~~~~~~~~~~
        
        Os arquivos CSV "fi√©is" de cada m√≥dulo usam um cabe√ßalho (comum a todos os campos do m√≥dulo) escrito em duro no in√≠cio de *build_csv.py*.
        
        Para definir "manualmente" esses cabe√ßalhos, √© poss√≠vel usar o script ``./get_mod_headers.py`` que exibe no terminal todos os diferentes cabe√ßalhos extra√≠dos por camelot :
        
        ::
        
          PATH_TO/sped-extractor/spedextractor$ ./get_mod_headers.py
        
          ECD's headers :
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', 'Tamanho', 'Decimal']
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', 'Tamanho', 'Decimal', 'Valores V√°lidos', 'Obrigat√≥rio', 'Regras de Valida√ß√£o do Campo']
          ['N¬∫', 'Campo', 'Descri√ß√£o', '', 'Tipo Tamanho', 'Decimal', 'Valores V√°lidos', 'Obrigat√≥rio', 'Regras de Valida√ß√£o do Campo']
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', 'Tamanho', 'Decimal', 'Valores V√°lidos', 'Obrigat√≥rio', 'Regras de Valida√ß√£o de Campo']
        
          ECF's headers :
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', '', 'Tamanho Decimal', 'Valores V√°lidos', 'Obrigat√≥rio']
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', 'Tamanho', 'Decimal', 'Valores V√°lidos', 'Obrigat√≥rio']
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', 'Tamanho Decimal', '', 'Valores V√°lidos', 'Obrigat√≥rio']
          ['N¬∫', 'Campo', 'Descri√ß√£o', 'Tipo', '', 'Tamanho Decimal', '', 'Valores V√°lidos Obrigat√≥rio']
        
          [...]
        
        Comparar sped-extractor com python-sped
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        python-sped_ √© uma biblioteca python com a lista dos campos de cada m√≥dulo da SPED, por√©m escrita "manualmente" e desatualizada (ECD e ECF seguindo os pdf das especifica√ß√µes de 2017, EFD/ICMS-IPI e EFD/PIS-COFINS seguindo os pdf das especifica√ß√µes de 2015).
        
        Apesar disso, pode ser interessante comparar essas listas de campos com as listas extraidas pelo **sped-extractor**. Para isso √© s√≥ lan√ßar o script ``./compare_ptyhon-sped.py``.
        
        Um exemple de compara√ß√£o com python-sped_ pode ser encontrada `aqui <https://gist.github.com/clementmbr/d422c02c52e1bbae7d2972475b363ea2>`_.
        
          üîé  Para detalhar as listas dos campos faltando em cada modelo, usar a op√ß√£o ``--detail``.
        
        Roadmap
        ========
        
        - Criar pacote python instal√°vel com pip.
        - Melhorar o arquivo JSON "tipo python-sped" (valor dos itens "regras" e "campos_chave" dos registros)
        
        Cr√©ditos
        ========
        
        Autores
        ~~~~~~~
        
        * Akretion
        
        Contributores
        ~~~~~~~~~~~~~
        
        * Rapha√´l Valyi <raphael.valyi@akretion.com.br>
        * Cl√©ment Mombereau <clement.mombereau@akretion.com.br>
        
        
        Administradores
        ~~~~~~~~~~~~~~~~
        
        Esse package est√° administrado por `Akretion <https://akretion.com/pt-BR>`_.
        
        .. _camelot: https://github.com/atlanhq/camelot
        .. _python-sped: https://github.com/sped-br/python-sped/
        
        .. _ECD_registers.csv: specs/2020/ecd/ecd_registers.csv
        .. _ECF_registers.csv: specs/2020/ecf/ecf_registers.csv
        .. _EFD_ICMS_IPI_registers.csv: specs/2020/efd_icms_ipi/efd_icms_ipi_registers.csv
        .. _EFD_PIS_COFINS_registers.csv: specs/2020/efd_pis_cofins/efd_pis_cofins_registers.csv
        
        .. _ECD_accurate_fields.csv: specs/2020/ecd/ecd_accurate_fields.csv
        .. _ECF_accurate_fields.csv: specs/2020/ecf/ecf_accurate_fields.csv
        .. _EFD_ICMS_IPI_accurate_fields.csv: specs/2020/efd_icms_ipi/efd_icms_ipi_accurate_fields.csv
        .. _EFD_PIS_COFINS_accurate_fields.csv: specs/2020/efd_pis_cofins/efd_pis_cofins_accurate_fields.csv
        
        .. _ECD_fields.csv: specs/2020/ecd/ecd_fields.csv
        .. _ECF_fields.csv: specs/2020/ecf/ecf_fields.csv
        .. _EFD_ICMS_IPI_fields.csv: specs/2020/efd_icms_ipi/efd_icms_ipi_fields.csv
        .. _EFD_PIS_COFINS_fields.csv: specs/2020/efd_pis_cofins/efd_pis_cofins_fields.csv
        
        .. _ECD_python-sped.json: specs/2020/ecd/ecd_python-sped.json
        .. _ECF_python-sped.json: specs/2020/ecf/ecf_python-sped.json
        .. _EFD_ICMS_IPI_python-sped.json: specs/2020/efd_icms_ipi/efd_icms_ipi_python-sped.json
        .. _EFD_PIS_COFINS_python-sped.json: specs/2020/efd_pis_cofins/efd_pis_cofins_python-sped.json
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/x-rst
