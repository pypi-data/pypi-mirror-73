Metadata-Version: 2.1
Name: testix
Version: 5.0.2
Summary: Mocking framework Python with *exact* Scenarios
Home-page: https://github.com/haarcuba/testix
Author: Yoav Kleinberger
Author-email: haarcuba@gmail.com
License: UNKNOWN
Keywords: mock,mocking,unittest,python,unit testing
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Testing
Requires-Dist: pytest (>~4.3.0)
Provides-Extra: testing
Requires-Dist: hypothesis (>~4.7.19) ; extra == 'testing'
Requires-Dist: pytest-asyncio ; extra == 'testing'


Testix is a Mocking framework for Python, meant to be used with [pytest](https://docs.pytest.org/en/latest/).

read the full docs at the [project's homepage](https://github.com/haarcuba/testix).

Testix is special because it allows you to specify what your mock objects do,
and it then enforces your specifications automatically. It also reduces (albeit
not entirely) mock setup. Other frameworks usually have a flow like this:

* setup mock
* let code do something with mock
* assert mock used in correct way

Testix flow is a bit different

* setup "top level" mock objects (`sock` in the following example)
* specify exactly what should happen to them using a scenario

And that's it.  


