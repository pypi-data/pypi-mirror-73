# coding: utf-8

"""
    Isilon SDK

    Isilon SDK - Language bindings for the OneFS API  # noqa: E501

    OpenAPI spec version: 6
    Contact: sdk@isilon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class IdResolutionPath(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'lin': 'str',
        'path': 'str'
    }

    attribute_map = {
        'lin': 'lin',
        'path': 'path'
    }

    def __init__(self, lin=None, path=None):  # noqa: E501
        """IdResolutionPath - a model defined in Swagger"""  # noqa: E501

        self._lin = None
        self._path = None
        self.discriminator = None

        if lin is not None:
            self.lin = lin
        if path is not None:
            self.path = path

    @property
    def lin(self):
        """Gets the lin of this IdResolutionPath.  # noqa: E501

        Logical Inode Number (LIN). A 64-bit number which uniquely identifies a file throughout its life.  # noqa: E501

        :return: The lin of this IdResolutionPath.  # noqa: E501
        :rtype: str
        """
        return self._lin

    @lin.setter
    def lin(self, lin):
        """Sets the lin of this IdResolutionPath.

        Logical Inode Number (LIN). A 64-bit number which uniquely identifies a file throughout its life.  # noqa: E501

        :param lin: The lin of this IdResolutionPath.  # noqa: E501
        :type: str
        """

        self._lin = lin

    @property
    def path(self):
        """Gets the path of this IdResolutionPath.  # noqa: E501

        The full path associated with the lin. null if the lin cannot be resolved to a path.  # noqa: E501

        :return: The path of this IdResolutionPath.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this IdResolutionPath.

        The full path associated with the lin. null if the lin cannot be resolved to a path.  # noqa: E501

        :param path: The path of this IdResolutionPath.  # noqa: E501
        :type: str
        """

        self._path = path

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IdResolutionPath):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
