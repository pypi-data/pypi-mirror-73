[tox]
envlist =
    py{36,37,38},
    docs,
    linters,
    packaging,
skip_missing_interpreters = true
minversion = 3.5.0
isolated_build = true

[flake8]
max-line-length = 119

[testenv]
basepython = python3
extras =
    docs: docs
    !docs: test
ignore_errors =
    !linters: false
    # Run all linters to see their output even if one of them fails.
    linters: true

commands_pre =
    # Verify installed packages have compatible dependencies.
    # NOTE: Running 'pip check' after installation is necessary since pip
    # currently lacks dependency resolution which means it can silently create
    # broken installations.
    # For more details, see: https://github.com/pypa/pip/issues/988.
    pip check

commands =
    # General tests commands:
    # Run tests.
    py{36,37,38}: pytest --verbose --cov=ngs_test_utils

    # Docs commands:
    # Build documentation.
    docs: python setup.py build_sphinx --fresh-env --warning-is-error

    # Linter commands:
    # Check code formatting.
    linters: black --check --target-version py36 src/ngs_test_utils
    linters: flake8 src/ngs_test_utils
    # Check documentation formatting (PEP 257).
    linters: pydocstyle src/ngs_test_utils --match='(?!test[_s]).*\.py'
    # Check order of imports.
    linters: isort --check-only --diff src/ngs_test_utils

    # Packaging commands:
    # Confirm that items checked into git are in sdist.
    packaging: check-manifest
    # Verify package's metadata.
    packaging: python setup.py check --metadata --strict
    # Verify that long description will render correctly on PyPI.
    packaging: python setup.py bdist_wheel sdist --quiet \
    packaging:     --dist-dir {toxworkdir}/packaging-test-dist
    packaging: twine check {toxworkdir}/packaging-test-dist/*

