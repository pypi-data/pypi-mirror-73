Metadata-Version: 2.1
Name: django-leafage
Version: 0.3.3
Summary: Simple and Easiest paginator for Django.
Home-page: https://github.com/nilesh-kr-dubey/django-leafage
Author: Nilesh Kumar Dubey
Author-email: nileshdubeyindia@gmail.com
License: MIT
Description: # Django Leafage
        
        ## Description
        Simple and Easiest paginator for Django.
        
        ## Installation
        ```pip install django-leafage```
        
        ## Quick start
        
        1. Add "leafage" to your INSTALLED_APPS setting like this::
        
            ```
            INSTALLED_APPS = [
                ...
                'leafage',
            ]
            ```
        
        2. In views ```import leafage``` like this::
        
            ```
            import leafage
        
            def home(request):
            """
                Home page handler.
            """
            template = 'home.html'
        
            per_page_obj = 10 # default = 10(if not provided)
        
            queryset = Model.objects.all()
            queryset = leafage.pagination(request=request, obj_list=queryset, obj_count=per_page_obj)
        
            context = {
                'queryset': queryset
            }
            return render(request, template, context)
        
            ```
        
        3. End of template look like this.
        
            ```
                {% with obj_list=queryset %}
                  {% include 'paginator.tpl' %}
                {% endwith %}
            ```
        
        
        ## Licence
        Copyright (c) 2020 Nilesh Kumar Dubey
        
        This repository is licensed under the MIT license.
        See LICENSE for details
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
