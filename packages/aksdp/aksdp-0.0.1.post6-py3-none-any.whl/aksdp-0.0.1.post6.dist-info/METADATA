Metadata-Version: 2.1
Name: aksdp
Version: 0.0.1.post6
Summary: Simple DataPipeline Library
Home-page: https://github.com/YoshikazuArimitsu/aksdp
License: MIT
Keywords: data,pipeline
Author: Y.Arimitsu
Author-email: yoshikazu_arimitsu@albert2005.co.jp
Requires-Python: >=3.6.1,<4.0.0
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Libraries
Provides-Extra: boto3
Provides-Extra: pandas
Provides-Extra: sqlalchemy
Requires-Dist: PyYAML (>=5.3.1,<6.0.0)
Requires-Dist: boto3 (>=1.0.0,<2.0.0); extra == "boto3"
Requires-Dist: pandas (>=0.25.0); extra == "pandas"
Requires-Dist: sqlalchemy (>=1.3.0,<2.0.0); extra == "sqlalchemy"
Project-URL: Repository, https://github.com/YoshikazuArimitsu/aksdp
Description-Content-Type: text/markdown

# aksdp

## Overview

A simple framework for writing data pipelines in Python

## INSTALL

```bash
$ pip install aksdp
```

## QuickStart

```python

class TaskA(Task):
   def main(self, ds):
      return ds

class TaskB(Task):
   ...

class TaskC(Task):
   ...

class TaskD(Task):
   ...

graph = Graph()
task_a = graph.append(TaskA())
task_b = graph.append(TaskB(), [task_a])
task_c = graph.append(TaskC(), [task_b])
task_d = graph.append(TaskD(), [task_b, task_c])
graph.run()

```

Each task runs after each dependent task completes.  
Also, the data output upstream can be received as input data and processed.
