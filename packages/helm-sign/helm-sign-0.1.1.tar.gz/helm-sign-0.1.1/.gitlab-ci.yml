
image: python:3.8

variables:
  helm_version: v3.2.4

stages:
  - test
  - build
  - deploy
  - release

unittests:
  stage: test
  before_script:
    - pip install .
    - curl https://get.helm.sh/helm-${helm_version}-linux-amd64.tar.gz | tar xzf - --strip-components 1 -C /usr/local/bin linux-amd64/helm
  script:
    - python -m unittest discover tests

unittests python 3.7:
  extends: unittests
  image: python:3.7

flake8 checks:
  stage: test
  before_script:
    - pip install flake8
  script:
    - python -m flake8

flake8 checks python 3.7:
  extends: flake8 checks
  image: python:3.7

mypy checks:
  stage: test
  before_script:
    - pip install . mypy
  script:
    - python -m mypy -p HelmSign

mypy checks python 3.7:
  extends: mypy checks
  image: python:3.7

build packages:
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - python setup.py sdist bdist_wheel
    - ls -lah dist/
  artifacts:
    paths:
      - dist/*.tar.gz
      - dist/*.whl

upload to PyPI:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG != null'
  before_script:
    - ls -lah dist/
    - pip install twine
  script:
    - twine upload --non-interactive dist/*

create release:
  image: registry.gitlab.com/gitlab-org/release-cli
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - >
      release-cli create --name $CI_COMMIT_TAG --description "# Changelog$(cat CHANGELOG.md | awk '/## '$CI_COMMIT_TAG'/{flag=1;next}/##/{flag=0}flag')"
      --tag-name $CI_COMMIT_TAG --ref $CI_COMMIT_SHA
      --assets-links-name "Package Files on PyPI"
      --assets-links-url "https://pypi.org/project/helm-sign/$CI_COMMIT_TAG/#files"
  needs:
    - upload to PyPI

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
