###############################################################################
## this is a configuration file for running pyvallex locally:
## cp example-pyvallex.ini ../pyvallex.ini
## compare it with deploy/production/server.ini
## which is used for running pyvallex in server mode


###############################################################################
## SEARCH PATHS CONFIGURATION
###############################################################################
[data]
## List of lexicons to load by default
##  - relative paths are relative to lexicon-dirs
##  - if not specified, loads all txt lexicons in the lexicon-dirs
##    that are found
##  - the lexicons should be listed one per line, e.g. as follows:
##
#lexicons = v-vallex.json
#           NomVallex.txt
#           n-vallex-shared.txt
lexicons=NomVallex.txt
	n-vallex-shared-communication.txt
	n-vallex-shared-other.txt
	v-vallex.txt

## The directories which are searched for lexicons
## defaults to ${vallex-repo}/aktualni_data/data-txt
## if not specified
# lexicon-dirs=/home/vernjaff/zdroj/Vallex/aktualni_data/data-txt/

## The location of the vallex checkout
## - used for looking up lexicons, scripts, tests, etc.
# vallex-repo=/home/vernjaff/zdroj/Vallex


###############################################################################
## WEB APP CONFIGURATION
###############################################################################
[web]
## The host on which the webapp will accept connections
## defaults to localhost
# host = 0.0.0.0

## The port on which the weapp will accept connections
# defaults to 8080
# port = 8080

## The name of the database the webapp will store its data in
## - defaults to web-data.db
## - can be overridden by specifying the PY_VALLEX_WEB_DB environment variable
# db = web-data.db

## The lexicons to load by default
##  - relative paths are relative to data.lexicon-dirs
##  - if not specified, loads all txt lexicons in the data.lexicon-dirs
##    that are found
# sources = v-vallex.txt

## The mode to run the server in
## - defaults to single user mode ('client'), where changes to the lexicons
##   are allowed and access to the filesystem is available (e.g. for creating
##   the initial configuration)
## - in multiuser mode ('server'), the lexicons are read-only and the
##   frontend includes logging facilities (for per-user stats & commenting
##   (in the future)); also, no access to the filesystem is available
#
# mode = client

###############################################################################
## SCRIPT CONFIGURATION
###############################################################################
[scripts]

# [transforms.udpipe]
## The model to load into udpipe
# model = /home/vernjaff/Stažené/czech-pdt-ud-2.3-181115.udpipe


###############################################################################
## UPDATE CONFIGURATION
###############################################################################
[update]
## An url to download information about updates
# channel = https://logic.ff.cuni.cz/nomvallex-beta/_updates/releases.json
#
## The hex-encoded key to cryptographically verify releases with
# release_key = 12398908a0f999bcd

###############################################################################
# LOGGING CONFIGURATION
###############################################################################
[logging]
## The default logging level (one of DEBUG, INFO, WARNING, ERROR, CRITICAL)
## above which log messages will saved to the log file
# level = INFO

## The path to the log file
# file = vallex-cli.log

## Logging level setting for specific classes of messages, e.g.
# bottle* = DEBUG
## would, in particular, log all messages coming from bottle:wsgi_server having
## log level >= DEBUG (the bottle* matches all classes starting with bottle)
