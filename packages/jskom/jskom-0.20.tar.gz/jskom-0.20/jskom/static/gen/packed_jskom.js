'use strict';(function($){var checkBrowser=function(){var supported=true;var ul=$("<ul></ul>");if(!Modernizr.localstorage){supported=false;$(ul).append("<li>localStorage</li>");}
if(!$.support.ajax){supported=false;$(ul).append("<li>Ajax</li>");}
if(!$.support.cors){supported=false;$(ul).append("<li>CORS</li>");}
if(!supported){$('body').empty().append("<div></div>");$('body div').append('<h3>Your browser is too old for jskom</h3>').append('Missing support for:').append(ul).append('<p>Note: Missing support for localStorage '+'can be because of private mode browsing, '+'which is not supported.</p>');return false;}else{return true;}};$(function(){checkBrowser();});})(jQuery);angular.module('jskom.httpkom',[]).provider('httpkom',function(){var _httpkomServer=null;this.setHttpkomServer=function(httpkomServer){_httpkomServer=httpkomServer;};this.$get=['$http',function($http){return{getHttpkomServer:function(){return _httpkomServer;},getLyskomServers:function(){return $http({method:'get',url:_httpkomServer+'/'});},};}];});window.jskom={};angular.module('jskom',['jskom.settings','jskom.templates','jskom.services','jskom.controllers','jskom.filters','jskom.directives','jskom.connections']).config(['$locationProvider',function($locationProvider){$locationProvider.html5Mode(true);}]).config(['$routeProvider','templatePathProvider',function($routeProvider,templatePathProvider){$routeProvider.when('/',{templateUrl:templatePathProvider.path('unreadconfs.html'),controller:'UnreadConfsCtrl'}).when('/conferences/go-to',{templateUrl:templatePathProvider.path('gotoconf.html'),controller:'GoToConfCtrl'}).when('/conferences/list',{templateUrl:templatePathProvider.path('listconfs.html'),controller:'ListConfsCtrl'}).when('/conferences/set-unread',{templateUrl:templatePathProvider.path('set_unread.html'),controller:'SetUnreadTextsCtrl'}).when('/conferences/:confNo/set-unread',{templateUrl:templatePathProvider.path('set_unread.html'),controller:'SetUnreadTextsCtrl'}).when('/conferences/:confNo/texts/new',{templateUrl:templatePathProvider.path('newtext.html'),controller:'NewTextCtrl'}).when('/conferences/:confNo/texts/',{templateUrl:templatePathProvider.path('unreadtexts.html'),controller:'ReadConferenceTextsCtrl',reloadOnSearch:false}).when('/conferences/:confNo/texts/latest/',{templateUrl:templatePathProvider.path('listconftexts.html'),controller:'ListConfTextsCtrl'}).when('/conferences/:confNo',{templateUrl:templatePathProvider.path('showconf.html'),controller:'ShowConfCtrl'}).when('/texts/new',{templateUrl:templatePathProvider.path('newtext.html'),controller:'NewTextCtrl'}).when('/texts/go-to',{templateUrl:templatePathProvider.path('gototext.html'),controller:'GoToTextCtrl'}).when('/texts/marks/',{templateUrl:templatePathProvider.path('listmarks.html'),controller:'ListMarksCtrl'}).when('/texts/',{templateUrl:templatePathProvider.path('showtext.html'),controller:'ReadTextsCtrl',reloadOnSearch:false}).when('/help',{templateUrl:templatePathProvider.path('help.html'),controller:'HelpCtrl'}).otherwise({redirectTo:'/'});}]);'use strict';(function(jskom){var HttpkomConnection=function($log,$rootScope,$q,$http,sessionsService,jskomCacheFactory,httpkomConnectionHeader,membershipListFactory,membershipListHandlerFactory,httpkomServer,id,serverId,httpkomId,session){this._$log=$log;this._$rootScope=$rootScope;this._$q=$q;this._$http=$http;this._sessionsService=sessionsService;this._jskomCacheFactory=jskomCacheFactory;this._httpkomConnectionHeader=httpkomConnectionHeader;this._membershipListFactory=membershipListFactory;this._membershipListHandlerFactory=membershipListHandlerFactory;this._httpkomServer=httpkomServer;this.id=id;this.serverId=serverId;this.httpkomId=httpkomId;this.session=session;this.textsCache=this._jskomCacheFactory(this.id+'-texts',{capacity:100});this.marksCache=this._jskomCacheFactory(this.id+'-marks',{capacity:100});this._createSessionPromise=null;this._pendingRequests=[];this._userActiveIntervalMs=40*1000;this._userActiveLastSent=null;this._userActivePromise=null;this.membershipListHandler=this._membershipListHandlerFactory.create(this,this._membershipListFactory.create());this.currentConferenceNo=0;};_.extend(HttpkomConnection.prototype,{_getBroadcastName:function(eventName){return eventName+":"+this.id.toString();},broadcast:function(eventName,args){var broadcastArgs={connection:this,args:_.toArray(arguments).slice(1)};return this._$rootScope.$broadcast(this._getBroadcastName(eventName),broadcastArgs);},on:function(name,listenerFn){var self=this;return this._$rootScope.$on(this._getBroadcastName(name),function($event,broadcastArgs){if(self===broadcastArgs.connection){self._$log.log("HttpkomConnection - on("+$event.name+")");$event.name=name;var listenerArgs=[$event].concat(broadcastArgs.args);listenerFn.apply(self,listenerArgs);}});},userIsActive:function(){if(this._userActiveLastSent==null||Date.now()-this._userActiveIntervalMs>=this._userActiveLastSent){if(this._userActivePromise==null){this._$log.log("HttpkomConnection - userIsActive("+this.getPersNo()+") - sending new user-active");var self=this;this._userActivePromise=this._sessionsService.userIsActive(this).then(function(){self._userActivePromise=null;self._userActiveLastSent=Date.now();},function(){self._userActivePromise=null;});}else{}}else{}},_addPendingRequest:function(deferred,requireSession,requireLogin){this._pendingRequests.push({deferred:deferred,requireLogin:requireLogin,requireSession:requireSession});},_removePendingRequest:function(deferred){this._pendingRequests=_.filter(this._pendingRequests,function(req){return req.deferred!==deferred});},_findPendingRequest:function(deferred){return _.find(this._pendingRequests,function(req){return req.deferred===deferred});},_hasPendingRequest:function(deferred){return this._findPendingRequest(deferred)?true:false;},_cancelAllPendingRequestsRequiringLogin:function(){this._$log.log("HttpkomConnection - http() - canceling all requests requiring login");this._pendingRequests=_.filter(this._pendingRequests,function(req){return!req.requireLogin;});},_cancelAllPendingRequestsRequiringSession:function(){this._cancelAllPendingRequestsRequiringLogin();this._$log.log("HttpkomConnection - http() - canceling all requests requiring session");this._pendingRequests=_.filter(this._pendingRequests,function(req){return!req.requireSession;});},_request:function(config,requireSession,requireLogin){var deferred=this._$q.defer();var promise=deferred.promise;var self=this;config.headers=config.headers||{};if(requireSession){config.headers[this._httpkomConnectionHeader]=this.httpkomId;}
if(config.method!=null&&config.method.toLowerCase()=='post'){config.headers['Cache-Control']='no-cache';}
var request=this._$http(config);this._addPendingRequest(deferred,requireSession,requireLogin);request.then(function(response){if(self._hasPendingRequest(deferred)){deferred.resolve(response);self._removePendingRequest(deferred);}},function(response){if(self._hasPendingRequest(deferred)){deferred.reject(response);self._removePendingRequest(deferred);if(response.status===401){self._$log.log("HttpkomConnection - _request() - 401: ")+config.url;self._cancelAllPendingRequestsRequiringLogin();self._resetPerson();}else if(response.status===403){self._$log.log("HttpkomConnection - _request() - 403: "+config.url);self._cancelAllPendingRequestsRequiringSession();self._resetSession();}else if(response.status===502){self._$log.log("HttpkomConnection - _request() - 502: "+config.url);self._cancelAllPendingRequestsRequiringSession();}else if(response.status===500){self._$log.log("HttpkomConnection - _request() - 500: "+config.url);var error=response.data;if(_.isObject(error)&&error.error_type==='httpkom'&&error.error_msg===''){self._cancelAllPendingRequestsRequiringSession();self._resetSession();}}}});return promise;},_resetSession:function(){if(this.httpkomId||this.session){this.httpkomId=null;this.session=null;this.membershipListHandler.reset();this._$rootScope.$broadcast('jskom:connection:changed',this);}},_resetPerson:function(){if(this.isLoggedIn()){this.session.person=null;this.membershipListHandler.reset();this._$rootScope.$broadcast('jskom:connection:changed',this);}},_createSessionAndRetry:function(originalRequest,requireSession,requireLogin){this._$log.log("HttpkomConnection - createSessionAndRetry(): "+originalRequest.url);var deferred=this._$q.defer();var promise=deferred.promise;var self=this;if(this._createSessionPromise==null){this._createSessionPromise=this._sessionsService.createSession(this).then(function(session){self._$log.log("HttpkomConnection - createSession - success");self._createSessionPromise=null;return session;},function(response){self._$log.log("HttpkomConnection - createSession - failure");self._createSessionPromise=null;return self._$q.reject(response);});}
this._createSessionPromise.then(function(){self._$log.log("HttpkomConnection - createSessionPromise - success");self._request(originalRequest,requireSession,requireLogin).then(function(orgResponse){deferred.resolve(orgResponse);},function(orgResponse){deferred.reject(orgResponse);});},function(){self._$log.log("HttpkomConnection - createSessionPromise - failure");deferred.reject({data:null,status:403,headers:null,config:originalRequest});});return promise;},http:function(config,requireSession,requireLogin){requireSession=requireSession||false;requireLogin=requireLogin||false;config.url=this.urlFor(config.url,false);if(requireLogin&&!this.isLoggedIn()){this._$log.log("HttpkomConnection - http() - failing request that requires login");return this._$q.reject({data:null,status:401,headers:null,config:config});}else if(requireSession&&!this.isConnected()){this._$log.log("HttpkomConnection - http() - retrying request after create session");return this._createSessionAndRetry(config,requireSession,requireLogin);}else{var self=this;return this._request(config,requireSession,requireLogin).then(null,function(response){if(response.status==403&&!requireLogin){return self._createSessionAndRetry(config,requireSession,requireLogin);}else{return self._$q.reject(response);}});}},clearAllCaches:function(){this._$log.log("connection(id: "+this.id+") - clearing all caches");this.textsCache.removeAll();this.marksCache.removeAll();},destroyAllCaches:function(){this.textsCache.destroy();this.marksCache.destroy();},urlFor:function(path,addHttpkomIdQueryParameter){var url=this._httpkomServer+'/'+this.serverId+path;if(addHttpkomIdQueryParameter){var kv=encodeURIComponent(this._httpkomConnectionHeader)+'='+
encodeURIComponent(this.httpkomId);if(url.indexOf('?')==-1){url+='?'+kv;}else{url+='&'+kv;}}
return url;},isConnected:function(){return(this.httpkomId&&this.session)?true:false;},isLoggedIn:function(){return(this.isConnected()&&this.session.person)?true:false;},getPersNo:function(){if(this.isLoggedIn()){return this.session.person.pers_no;}else{return null;}},toObject:function(){return{id:this.id,httpkomId:this.httpkomId,serverId:this.serverId,session:this.session};}});jskom.HttpkomConnection=HttpkomConnection;})(window.jskom);'use strict';(function(jskom){function MembershipList(){this._membershipsMap={};this._membershipUnreadsMap=null;this._unreadMemberships=null;this._readMemberships=null;};_.extend(MembershipList.prototype,{_patchMembership:function(membership){var confNo=membership.conference.conf_no;if(_.has(this._membershipUnreadsMap,confNo)){var mu=this._membershipUnreadsMap[confNo];membership.no_of_unread=mu.no_of_unread;membership.unread_texts=mu.unread_texts;}else{membership.no_of_unread=0;membership.unread_texts=[];}},_rebuildMembershipLists:function(){if(this._membershipUnreadsMap!==null){var self=this;_.each(this._membershipsMap,function(m){self._patchMembership(m);});this._readMemberships=_.filter(this._membershipsMap,function(m){return m.no_of_unread==0;});this._unreadMemberships=_.filter(this._membershipsMap,function(m){return m.no_of_unread>0;});}},clear:function(){this._membershipsMap={};this._membershipUnreadsMap=null;this._unreadMemberships=null;this._readMemberships=null;},getReadMemberships:function(){return this._readMemberships;},getUnreadMemberships:function(){return this._unreadMemberships;},getMembership:function(confNo){if(_.has(this._membershipsMap,confNo)){return this._membershipsMap[confNo];}else{return null;}},addMembership:function(membership){return this.addMemberships([membership]);},addMemberships:function(memberships){var self=this;_.each(memberships,function(m){self._membershipsMap[m.conference.conf_no]=m;});this._rebuildMembershipLists();},deleteMembership:function(confNo){if(_.has(this._membershipsMap,confNo)){delete this._membershipsMap[confNo];this._rebuildMembershipLists();}},updateMembership:function(membership){this._patchMembership(membership);},setMembershipUnreads:function(membershipUnreads){this._membershipUnreadsMap=_.object(_.map(membershipUnreads,function(mu){return[mu.conf_no,mu];}));this._rebuildMembershipLists();},setMembershipUnread:function(membershipUnread){if(this._membershipUnreadsMap!=null){this._membershipUnreadsMap[membershipUnread.conf_no]=membershipUnread;this._rebuildMembershipLists();}else{}},markTextAsRead:function(textNo,recipientConfNos){var shouldUpdate=false;if(this._membershipUnreadsMap!=null){var self=this;_.each(recipientConfNos,function(confNo){var mu=self._membershipUnreadsMap[confNo];if(mu!=null){var idx=mu.unread_texts.indexOf(textNo);if(idx!==-1){mu.unread_texts.splice(idx,1);mu.no_of_unread-=1;shouldUpdate=true;}}});}
if(shouldUpdate){this._rebuildMembershipLists();}},markTextAsUnread:function(textNo,recipientConfNos){var shouldUpdate=false;if(this._membershipUnreadsMap!=null){var self=this;_.each(recipientConfNos,function(confNo){var mu=self._membershipUnreadsMap[confNo];if(mu!=null){var idx=mu.unread_texts.indexOf(textNo);if(idx===-1){mu.unread_texts.push(textNo);mu.no_of_unread+=1;shouldUpdate=true;}}});}
if(shouldUpdate){this._rebuildMembershipLists();}}});jskom.MembershipList=MembershipList;})(window.jskom);'use strict';(function(jskom){function MembershipListHandler($log,$q,$timeout,membershipsService,conn,membershipList){this._$log=$log;this._$q=$q;this._$timeout=$timeout;this._membershipsService=membershipsService;this._conn=conn;this._membershipList=membershipList;this._logPrefix="MembershipListHandler - ";this._initializePromise=null;this._refreshIntervalSeconds=2*60;this._autoRefreshPromise=null;};_.extend(MembershipListHandler.prototype,{initialize:function(){if(this._conn.isLoggedIn()){return this._initialize();}else{return this._$q.reject();}},_initialize:function(){if(this._initializePromise==null){var p1=this._fetchUnreadMemberships();var p2=this._fetchMembershipUnreads();var self=this;this._initializePromise=this._$q.all([p1,p2]).then(function(){self._registerEvents();self._fetchAllMemberships();self.enableAutoRefresh();self._$log.log(self._logPrefix+"initialize() - success");},function(){self._$log.log(self._logPrefix+"initialize() - error");self._initializePromise=null;return self._$q.reject();});}
return this._initializePromise;},_registerEvents:function(){var conn=this._conn;var self=this;conn.on('jskom:session:created',function($event){self._$log.log(self._logPrefix+'on(jskom:session:created)');self.reset();});conn.on('jskom:session:changed',function($event){self._$log.log(self._logPrefix+'on(jskom:session:changed)');self.reset();});conn.on('jskom:session:deleted',function($event){self._$log.log(self._logPrefix+'on(jskom:session:deleted)');self.reset();});conn.on('jskom:readMarking:created',function($event,text){self._$log.log(self._logPrefix+'on(jskom:readMarking:created)');var recipientConfNos=_.map(text.recipient_list,function(r){return r.recpt.conf_no;});self._membershipList.markTextAsRead(text.text_no,recipientConfNos);});conn.on('jskom:readMarking:deleted',function($event,text){self._$log.log(self._logPrefix+'on(jskom:readMarking:deleted)');var recipientConfNos=_.map(text.recipient_list,function(r){return r.recpt.conf_no;});self._membershipList.markTextAsUnread(text.text_no,recipientConfNos);});conn.on('jskom:membership:created',function($event,confNo){self._$log.log(self._logPrefix+'on(jskom:membership:created, '+confNo+')');self._fetchMembership(confNo);self._fetchMembershipUnread(confNo);});conn.on('jskom:membership:deleted',function($event,confNo){self._$log.log(self._logPrefix+'on(jskom:membership:deleted, '+confNo+')');self._membershipList.deleteMembership(confNo);});conn.on('jskom:membership:changed',function($event,confNo){self._$log.log(self._logPrefix+'on(jskom:membership:changed, '+confNo+')');self._fetchMembership(confNo);});conn.on('jskom:membershipUnread:changed',function($event,confNo){self._$log.log(self._logPrefix+'on(jskom:membershipUnread:changed)');self._fetchMembershipUnread(confNo);});conn.on('jskom:text:created',function($event,textNo,recipientList){self._$log.log(self._logPrefix+'on(jskom:text:created, '+textNo+')');var recipientConfNos=_.map(recipientList,function(r){return r.recpt.conf_no;});self._membershipList.markTextAsUnread(textNo,recipientConfNos);});conn.on('jskom:text:fetched',function($event,text){self._$log.log(self._logPrefix+'on(jskom:text:fetched, '+text.text_no+')');var recipientConfNos=_.map(text.recipient_list,function(r){return r.recpt.conf_no;});});},_fetchMembershipUnreads:function(){var logp=this._logPrefix+"getMembershipUnreads() - ";var self=this;return this._membershipsService.getMembershipUnreads(this._conn).then(function(membershipUnreads){self._$log.log(logp+"success");self._membershipList.setMembershipUnreads(membershipUnreads);},function(response){self._$log.log(logp+"error");return self._$q.reject();});},_fetchMembershipUnread:function(confNo){var logp=this._logPrefix+"getMembershipUnread("+confNo+") - ";var self=this;return this._membershipsService.getMembershipUnread(this._conn,confNo).then(function(membershipUnread){self._$log.log(logp+"success");self._membershipList.setMembershipUnread(membershipUnread);},function(response){self._$log.log(logp+"error");return self._$q.reject();});},_fetchUnreadMemberships:function(){var options={unread:true};var logp=this._logPrefix+"getMemberships("+angular.toJson(options)+") - ";var self=this;return this._membershipsService.getMemberships(this._conn,options).then(function(unreadMembershipList){self._$log.log(logp+"success");self._membershipList.addMemberships(unreadMembershipList.memberships);},function(response){self._$log.log(logp+"error");return self._$q.reject();});},_fetchAllMemberships:function(){this._fetchMemberships(0,500,1000);},_fetchMemberships:function(first,noOfMemberships,maxNoOfMemberships){var logp=this._logPrefix+"getMemberships({ unread: false }) - ";var self=this;var options={unread:false,first:first,noOfMemberships:noOfMemberships}
return this._membershipsService.getMemberships(self._conn,options).then(function(membershipList){self._$log.log(logp+"success");self._membershipList.addMemberships(membershipList.memberships);var nextFirst=first+noOfMemberships;if(membershipList.has_more&&nextFirst<maxNoOfMemberships){self._fetchMemberships(nextFirst,noOfMemberships,maxNoOfMemberships);}},function(response){self._$log.log(logp+"error");return self._$q.reject();});},_fetchMembership:function(confNo){var logp=this._logPrefix+"getMemberships("+confNo+") - ";var self=this;return this._membershipsService.getMembership(this._conn,confNo).then(function(membership){self._$log.log(logp+"success");self._membershipList.addMembership(membership);},function(response){self._$log.log(logp+"error");return self._$q.reject();});},reset:function(){this.disableAutoRefresh();this._membershipList.clear();this._initializePromise=null;},getMembershipList:function(){var self=this;return this._initialize().then(function(){return self._membershipList;});},_enableAutoRefresh:function(){this._$log.log(this._logPrefix+"enabling auto-refresh");var defaultIntervalMs=this._refreshIntervalSeconds*1000;var self=this;function refresh(){self._fetchMembershipUnreads().then(function(){scheduleRefresh(defaultIntervalMs);},function(){scheduleRefresh(defaultIntervalMs*2);});}
function scheduleRefresh(refreshIntervalMs){if(self._autoRefreshPromise!=null){self._$timeout.cancel(self._autoRefreshPromise);}
self._autoRefreshPromise=self._$timeout(refresh,refreshIntervalMs);}
scheduleRefresh(defaultIntervalMs);},enableAutoRefresh:function(){var self=this;return this._initialize().then(function(){self._enableAutoRefresh();});},disableAutoRefresh:function(){if(this._autoRefreshPromise!=null){this._$log.log(this._logPrefix+"disabling auto-refresh");this._$timeout.cancel(this._autoRefreshPromise);this._autoRefreshPromise=null;}},refreshUnread:function(){var self=this;return this._initialize().then(function(){self._enableAutoRefresh();return self._fetchMembershipUnreads();});}});jskom.MembershipListHandler=MembershipListHandler;})(window.jskom);(function(jskom){var Reader=function($log,$q,textsService,conn){this._$log=$log;this._$q=$q;this._textsService=textsService;this._conn=conn;this._membership={unread_texts:[],no_of_unread:0};this._pending=[];this._threadStack=[];this._numPrefetches=5;};_.extend(Reader.prototype,{setMembership:function(membership){if(membership==null){throw"membership is null";}
this._membership=membership;},unshiftPending:function(){this._pending.unshift.apply(this._pending,arguments);},shiftPending:function(){return this._pending.shift();},pendingCount:function(){return this._pending.length;},hasPending:function(){return this._pending.length>0;},shiftUnread:function(){var self=this;return this._getNextUnreadText(this._membership.unread_texts,this._threadStack).then(function(textNo){if(textNo!=null){self._runPrefetch();}
return textNo;});},unreadCount:function(){return this._membership.no_of_unread;},hasUnread:function(){return this._membership.no_of_unread>0;},isEmpty:function(){return!(this.hasPending()||this.hasUnread());},_runPrefetch:function(){var threadStack=this._threadStack.slice(0);var unreadTexts=this._membership.unread_texts;var numPrefetchesLeft=this._numPrefetches;var self=this;function prefetch(){self._getNextUnreadText(unreadTexts,threadStack).then(function(textNo){if(textNo!=null){--numPrefetchesLeft;if(numPrefetchesLeft>0){unreadTexts=_.without(unreadTexts,textNo);prefetch();}}});}
if(numPrefetchesLeft>0){prefetch();}},_getFirstUnreadText:function(unreadTextNos,threadStack){var unreadTextNo=null;if(threadStack.length>0){unreadTextNo=threadStack.pop();}else if(unreadTextNos.length>0){unreadTextNo=_.min(unreadTextNos);}
return unreadTextNo;},_getUnreadComments:function(unreadTextNo,unreadTextNos){return this._textsService.getText(this._conn,unreadTextNo).then(function(text){var comments=_.map(text.comment_in_list,function(comment){return comment.text_no;});if(comments!=null&&comments.length>0){var unreadComments=_.filter(comments,function(textNo){return _.include(unreadTextNos,textNo)});return unreadComments;}else{return[];}});},_getNextUnreadText:function(unreadTextNos,threadStack){var deferred=this._$q.defer();var unreadTextNo=this._getFirstUnreadText(unreadTextNos,threadStack);if(unreadTextNo!=null){this._getUnreadComments(unreadTextNo,unreadTextNos).then(function(unreadComments){unreadComments.reverse();_.each(unreadComments,function(textNo){threadStack.push(textNo);});deferred.resolve(unreadTextNo);},function(response){deferred.reject(response);});}else{deferred.resolve(null);}
return deferred.promise;}});jskom.Reader=Reader;})(window.jskom);'use strict';angular.module('jskom.controllers',['jskom.httpkom','jskom.services','jskom.settings','jskom.keybindings']).controller('HelpCtrl',['$scope','$log','keybindingService',function($scope,$log,keybindingService){$scope.$watch(keybindingService.getGeneralBindings,function(newGeneralBindings){$scope.generalKeys=newGeneralBindings;});}]).controller('KeybindingHelpCtrl',['$scope','$log','keybindingService','modernizr',function($scope,$log,keybindingService,modernizr){$scope.isVisible=false;$scope.hasTouch=modernizr.touch;keybindingService.bindGeneral('?','Show page specific keybindings (toggle)',function(e){$scope.$apply(function(){$scope.isVisible=!$scope.isVisible;});return false;});$scope.$watch(keybindingService.getGeneralBindings,function(newGeneralBindings){$scope.generalKeys=newGeneralBindings;});$scope.$watch(keybindingService.getPageSpecificBindings,function(newPageSpecificBindings){$scope.pageSpecificKeys=newPageSpecificBindings;});}]).controller('MembershipsCtrl',['$scope','$log','$routeParams','messagesService','keybindingService','membershipListService',function($scope,$log,$routeParams,messagesService,keybindingService,membershipListService){$scope.membershipList=null;$scope.$watch('connection',function(newConnection){$scope.membershipList=null;if(newConnection!=null){membershipListService.getMembershipList($scope.connection).then(function(membershipList){$log.log("MembershipsCtrl - getMembershipList() - success");$scope.membershipList=membershipList;},function(){$log.log("MembershipsCtrl - getMembershipList() - error");$scope.membershipList=null;});}});$scope.isRefreshing=false;$scope.refreshUnread=function(){if($scope.membershipList!=null&&!$scope.isRefreshing){$scope.isRefreshing=true;$scope.connection.userIsActive();membershipListService.refreshUnread($scope.connection).then(function(){$scope.isRefreshing=false;},function(){$scope.isRefreshing=false;});}};keybindingService.bindGeneral('R','Refresh unread texts',function(e){$scope.$apply(function(){$scope.refreshUnread();});return false;});}]).controller('SidebarCtrl',['$scope','$log','$routeParams','messagesService',function($scope,$log,$routeParams,messagesService){$scope.currentConfNo=null;$scope.$watch(function(){return $routeParams.confNo;},function(newConfNo){$scope.currentConfNo=newConfNo;},true);$scope.pageSize=20;$scope.currentPage=0;$scope.numberOfPages=1;$scope.previousPage=function(){$scope.currentPage=($scope.currentPage<1?0:$scope.currentPage-1);};$scope.nextPage=function(){$scope.currentPage=($scope.currentPage>=$scope.numberOfPages-1?$scope.currentPage:$scope.currentPage+1);};$scope.$watch('membershipList.getReadMemberships()',function(newReadMemberships){$scope.readMemberships=newReadMemberships;$scope.currentPage=0;if(newReadMemberships!=null){$scope.numberOfPages=Math.ceil($scope.readMemberships.length/$scope.pageSize);}else{$scope.numberOfPages=0;}});$scope.$watch('membershipList.getUnreadMemberships()',function(newUnreadMemberships){$scope.unreadMemberships=newUnreadMemberships;});}]).controller('ConnectionsCtrl',['$scope','$rootScope','$log','$location','connectionsService','httpkom','messagesService','sessionsService','keybindingService',function($scope,$rootScope,$log,$location,connectionsService,httpkom,messagesService,sessionsService,keybindingService){$scope.newConnection=function(){connectionsService.newConnectionPromise().then(function(conn){$location.url('/');connectionsService.setCurrentConnection(conn);},function(response){$log.log("ConnectionsCtrl - newConnection() - error");messagesService.showMessage('error','Failed to create new connection.',response.data);});};$scope.selectConnection=function(conn){var curConn=connectionsService.getCurrentConnection();if(conn!==curConn){messagesService.clearAll();$location.url('/');conn.userIsActive();}
connectionsService.setCurrentConnection(conn);};$scope.$watch(connectionsService.getConnections,function(newConnMap){$scope.connections=newConnMap;});$scope.$watch(connectionsService.getCurrentConnection,function(newCurrentConn,oldConn){if(newCurrentConn){$log.log("New current connection ("+newCurrentConn.id+") - session: "+
angular.toJson(newCurrentConn.session));$scope.connection=newCurrentConn;}else{$scope.connection=null;}});$scope.logout=function(){sessionsService.deleteSession($scope.connection,0).then(function(){$log.log("ConnectionsCtrl - logout() - success");connectionsService.removeConnection($scope.connection);},function(response){$log.log("ConnectionsCtrl - logout() - error");messagesService.showMessage('error','Error when logging out.',response.data);connectionsService.removeConnection($scope.connection);});};$scope.servers=null;connectionsService.getServers().then(function(servers){$log.log("ConnectionsCtrl - getServers() - success");$scope.servers=servers;if(!$scope.connection){$scope.newConnection();}},function(response){$log.log("ConnectionsCtrl - getServers() - error");messagesService.showMessage('error','Failed to get server list.',response.data);});$scope.selectNextConnection=function(){if(_.size($scope.connections)>1){var newConn;var connections=_.sortBy(_.values($scope.connections),function(conn){return conn.id;});if($scope.connection){var connectionIds=_.map(connections,function(conn){return conn.id;});var index=connectionIds.indexOf($scope.connection.id);if(index+1<connectionIds.length){newConn=connections[index+1];}else{newConn=_.first(connections);}}else{newConn=_.first(connections);}
$scope.selectConnection(newConn);}};keybindingService.bindGeneral('N','Next LysKOM session',function(){$scope.$apply(function(){$scope.selectNextConnection();});return false;});}]).controller('LoginTabsCtrl',['$scope','$log','pageTitleService','sessionsService',function($scope,$log,pageTitleService,sessionsService){$scope.loginActiveTab='login';$scope.selectTab=function(tab){$scope.loginActiveTab=tab;};$scope.isTabActive=function(tab){if($scope.loginActiveTab==tab){return'active';}else{return'';}};$scope.$watch('loginActiveTab',function(newTab){if(newTab=='login'){pageTitleService.set("Log in");}else if(newTab=='create'){pageTitleService.set("Create person");}else{pageTitleService.set("");}});$scope.person=sessionsService.newPerson();$scope.$on('jskom:person:created',function($event,persNo){$scope.person=sessionsService.newPerson(persNo);$scope.loginActiveTab='login';});}]).controller('LoginCtrl',['$scope','$log','sessionsService','messagesService','connectionsStorage',function($scope,$log,sessionsService,messagesService,connectionsStorage){$scope.isLoggingIn=false;$scope.reset=function(){if($scope.connection.isConnected()){$scope.isReseting=true;sessionsService.deleteSession($scope.connection,$scope.connection.session.session_no).then(function(){$log.log("LoginCtrl - reset() - success");$scope.person=sessionsService.newPerson();$scope.isReseting=false;},function(response){$log.log("LoginCtrl - reset() - error");messagesService.showMessage('error','Failed to reset login.',response.data);$scope.isReseting=false;});}else{$scope.person=sessionsService.newPerson();}};$scope.login=function(){$scope.isLoggingIn=true;sessionsService.login($scope.connection,$scope.person).then(function(){$log.log("LoginCtrl - login() - success");messagesService.clearAll();$scope.isLoggingIn=false;},function(response){$log.log("LoginCtrl - login() - error");messagesService.showMessage('error','Failed to login.',response.data);$scope.isLoggingIn=false;});};}]).controller('NewPersonCtrl',['$scope','$log','$location','personsService','messagesService','sessionsService',function($scope,$log,$location,personsService,messagesService,sessionsService){var values=[0,1,2,3,4,5,6,7,8,9];var pickRandom=function(){return values[Math.floor(Math.random()*values.length)];};var newQuestion=function(){$scope.v1=pickRandom();$scope.v2=pickRandom();$scope.question='what is '+$scope.v1+' + '+$scope.v2+'?';$scope.answer='';};var checkAnswer=function(){var answer=parseInt(jQuery.trim($scope.answer));if(_.isNaN(answer)){return false;}
return(($scope.v1+$scope.v2)==answer);};newQuestion();$scope.isCreating=false;$scope.person=personsService.newPerson();$scope.createPerson=function(){if($scope.person.passwd!=$scope.confirmpasswd){messagesService.showMessage('error','The confirmation password is not correct.');return;}
if(!checkAnswer()){messagesService.showMessage('error','The answer to the control question is wrong.');newQuestion();return;}
$scope.isCreating=true;return personsService.createPerson($scope.connection,$scope.person).then(function(person){$log.log("NewPersonCtrl - createPerson() - success");$scope.isCreating=false;messagesService.showMessage('success','Successfully created person.');$scope.$emit('jskom:person:created',person.pers_no);$scope.person=personsService.newPerson();},function(response){$log.log("NewPersonCtrl - createPerson() - error");$scope.isCreating=false;messagesService.showMessage('error','Failed to create person.',response.data);newQuestion();});};}]).controller('MessagesCtrl',['$scope','messagesService','$log',function($scope,messagesService,$log){$scope.$watch(messagesService.getMessages,function(newMessages){$scope.messages=newMessages;});}]).controller('UnreadConfsCtrl',['$scope','$location','$log','conferencesService','pageTitleService','messagesService','keybindingService',function($scope,$location,$log,conferencesService,pageTitleService,messagesService,keybindingService){pageTitleService.set("Unread conferences");$scope.unreadMemberships=null;$scope.$watch('membershipList.getUnreadMemberships()',function(newUnreadMemberships){$scope.unreadMemberships=newUnreadMemberships;});$scope.$watch('unreadMemberships',function(newUnreadMemberships){if(newUnreadMemberships!=null){var unreadCount=_.reduce(newUnreadMemberships,function(count,membership){return count+membership.no_of_unread;},0);pageTitleService.set("("+unreadCount+") Unread conferences");}});$scope.readFirstConference=function(){if($scope.unreadMemberships.length>0){var m=_.first(_.sortBy($scope.unreadMemberships,function(m){return-m.priority;}));$location.url("/conferences/"+m.conference.conf_no+"/texts/");}};keybindingService.bindPageSpecific(['space','j'],'Read first conference',function(e){if($scope.unreadMemberships.length>0){$scope.$apply(function(){$scope.readFirstConference();});}
return false;});}]).controller('SetUnreadTextsCtrl',['$scope','$location','$routeParams','$log','membershipsService','pageTitleService','messagesService','keybindingService',function($scope,$location,$routeParams,$log,membershipsService,pageTitleService,messagesService,keybindingService){pageTitleService.set("Set number of unread texts");$scope.confNo=$routeParams.confNo||null;$scope.noOfUnread=0;$scope.isLoading=false;$scope.setNumberOfUnreadTexts=function(){$scope.isLoading=true;membershipsService.setNumberOfUnreadTexts($scope.connection,$scope.confNo,$scope.noOfUnread).then(function(){$log.log("SetUnreadTextsCtrl - setNumberOfUnreadTexts() - success");$scope.isLoading=false;messagesService.showMessage('success','Successfully set number of unread texts.','',true);$location.url('/');},function(response){$log.log("SetUnreadTextsCtrl - setNumberOfUnreadTexts() - error");$scope.isLoading=false;messagesService.showMessage('error','Failed to set number of unread texts.',response.data);});};}]).controller('NewTextCtrl',['$scope','textsService','$log','$location','$routeParams','messagesService','pageTitleService','keybindingService','imageService',function($scope,textsService,$log,$location,$routeParams,messagesService,pageTitleService,keybindingService,imageService){pageTitleService.set("New text");$scope.text=null;$scope.commentedText=null;$scope.activeTab='simple';$scope.commentTypes=[{name:'Comment',type:'comment'},{name:'Footnote',type:'footnote'}];$scope.recipientTypes=[{name:'To',type:'to'},{name:'CC',type:'cc'},{name:'BCC',type:'bcc'}];$scope.newRecipient=function(){return{type:'to',recpt:{}}};var newEmptyText=function(){return{recipient_list:[],content_type:'text/plain',content_encoding:null,subject:'',body:''};};var makeCommentTo=function(comment,commentedText){comment.comment_to_list=[{type:'comment',text_no:commentedText.text_no}];comment.subject=commentedText.subject;_.each(commentedText.recipient_list,function(r){if(r.type=='to'){comment.recipient_list.push(_.clone(r));}});};$scope.selectTab=function(tab){$scope.activeTab=tab;};$scope.isTabActive=function(tab){if($scope.activeTab==tab){return'active';}else{return'';}};$scope.returnUrl=$location.search().returnUrl;$scope.goToReturnUrl=function(){$location.url($scope.returnUrl);};if($location.search().commentTo){var commentToTextNo=parseInt($location.search().commentTo)
$scope.activeTab='simple';textsService.getText($scope.connection,commentToTextNo).then(function(text){$log.log("NewTextCtrl - getText("+commentToTextNo+") - success");var newText=newEmptyText();makeCommentTo(newText,text);$scope.commentedText=text;$scope.text=newText;pageTitleService.set("New comment to "+$scope.commentedText.text_no);},function(response){$log.log("NewTextCtrl - getText("+commentToTextNo+") - error");messagesService.showMessage('error','Failed to get text to comment.',response.data);});}else{var newText=newEmptyText();if($routeParams.confNo!=null){newText.recipient_list.push({"type":"to","recpt":{"conf_no":$routeParams.confNo}});}else{newText.recipient_list.push($scope.newRecipient());}
$scope.text=newText;$scope.activeTab='advanced';}
$scope.activeContentTypeTab='text';$scope.selectContentTypeTab=function(tab){$scope.activeContentTypeTab=tab;};$scope.isContentTypeTabActive=function(tab){if($scope.activeContentTypeTab==tab){return'active';}else{return'';}};var maxImageSize=600;$scope.imageDataUrl=null;$scope.imageIsLoading=false;$scope.loadImage=function(files){var file=files[0];if(file){$scope.text.content_type=null;var imageReader=new FileReader();imageReader.addEventListener("load",function(){imageService.resizeImage(imageReader.result,maxImageSize,maxImageSize).then(function(scaledDataUrl){$scope.imageIsLoading=false;$scope.imageDataUrl=scaledDataUrl;$scope.text.content_type=scaledDataUrl.replace(/^data:(.*);base64,(.*)$/,"$1");$scope.text.body=scaledDataUrl.replace(/^data:(.*);base64,(.*)$/,"$2");$scope.text.content_encoding="base64";});},false);imageReader.readAsDataURL(file);$scope.$apply(function(){$scope.imageIsLoading=true;});}};$scope.createText=function(){if($scope.isCreating){return;}
$scope.isCreating=true;textsService.createText($scope.connection,$scope.text).then(function(data){$log.log("NewTextCtrl - createText() - success");messagesService.showMessage('success','Successfully created text.','Text number '+data.text_no+' was created.',true);if($scope.returnUrl){$scope.goToReturnUrl();}else{$location.url('/texts/?text='+data.text_no);}
$scope.isCreating=false;},function(response){$log.log("NewTextCtrl - createText() - error");messagesService.showMessage('error','Failed to create text.',response.data);$scope.isCreating=false;});};}]).controller('TextControlsCtrl',['$scope','$log','$window','$location','httpkomServer','keybindingService','readMarkingsService','textsService','marksService','messagesService',function($scope,$log,$window,$location,httpkomServer,keybindingService,readMarkingsService,textsService,marksService,messagesService){$scope.readmarkIsLoading=false;$scope.markIsLoading=false;$scope.writeComment=function(){var returnUrl=$location.url();$location.url("/texts/new");$location.search({returnUrl:returnUrl,commentTo:$scope.text.text_no});};keybindingService.bindPageSpecific('k','Write comment',function(e){$scope.$apply(function(){$scope.writeComment();});return false;});$scope.markAsRead=function(){var text=$scope.text;$scope.readmarkIsLoading=true;readMarkingsService.createGlobalReadMarking($scope.connection,text).then(function(){$log.log("TextControlsCtrl - markAsRead("+text.text_no+") - success");$scope.readmarkIsLoading=false;},function(response){$log.log("TextControlsCtrl - markAsRead("+text.text_no+") - error");$scope.readmarkIsLoading=false;messagesService.showMessage('error','Failed to mark text '+text.text_no+' as read.',response.data);});};$scope.markAsUnread=function(){var text=$scope.text;$scope.readmarkIsLoading=false;readMarkingsService.deleteGlobalReadMarking($scope.connection,text).then(function(){$log.log("TextControlsCtrl - markAsUnread("+text.text_no+") - success");$scope.readmarkIsLoading=false;},function(response){$log.log("TextControlsCtrl - markAsUnread("+text.text_no+") - error");$scope.readmarkIsLoading=false;messagesService.showMessage('error','Failed to mark text '+text.text_no+' as read.',response.data);});};$scope.markTextFormIsVisible=false;$scope.showMarkTextForm=function(){$scope.markTextFormIsVisible=true;};$scope.hideMarkTextForm=function(){$scope.markTextFormIsVisible=false;};keybindingService.bindPageSpecific('M','Mark text',function(e){$scope.$apply(function(){if($scope.markTextFormIsVisible){$scope.hideMarkTextForm();}else{$scope.showMarkTextForm();}});return false;});$scope.$watch('text.text_no',function(){$scope.hideMarkTextForm();});}]).controller('UnmarkTextCtrl',['$scope','$log','marksService','messagesService',function($scope,$log,marksService,messagesService){$scope.isUnmarking=false;var unmarkText=function(textNo){$scope.isUnmarking=true;marksService.deleteMark($scope.connection,textNo).then(function(){$log.log("UnmarkTextCtrl - markText("+textNo+") - success");$scope.isUnmarking=false;},function(response){$log.log("UnmarkTextCtrl - markText("+textNo+") - error");$scope.isUnmarking=false;if(response.data.error_code===44){messagesService.showMessage('','The text '+response.data.error_status+' was not marked.');}else{messagesService.showMessage('error','Failed to unmark text.',response.data);}});};$scope.unmarkText=function(){unmarkText($scope.text.text_no);};}]).controller('MarkTextCtrl',['$scope','$log','marksService','messagesService',function($scope,$log,marksService,messagesService){$scope.markType=100;$scope.isMarking=false;var markText=function(textNo,markType){$scope.isMarking=true;marksService.createMark($scope.connection,textNo,markType).then(function(){$log.log("MarkTextCtrl - markText("+textNo+", "+markType+") - success");$scope.isMarking=false;$scope.hideMarkTextForm();},function(response){$log.log("MarkTextCtrl - markText("+textNo+", "+markType+") - error");$scope.isMarking=false;messagesService.showMessage('error','Failed to mark text '+textNo+'.',response.data);});};$scope.markText=function(){markText($scope.text.text_no,$scope.markType);};}]).controller('ListMarksCtrl',['$scope','$log','marksService','messagesService','pageTitleService',function($scope,$log,marksService,messagesService,pageTitleService){pageTitleService.set("Marked texts");$scope.marks=null;$scope.isLoading=false;$scope.pageSize=10;$scope.currentPage=0;$scope.numberOfPages=1;$scope.pageNumbers=[0];var getMarks=function(){$scope.isLoading=true;marksService.getMarks($scope.connection).then(function(marks){$log.log("ListMarksCtrl - getMarks() - success");$scope.isLoading=false;$scope.marks=_.sortBy(marks,function(mark){return mark.type;});$scope.currentPage=0;$scope.numberOfPages=Math.ceil($scope.marks.length/$scope.pageSize);$scope.pageNumbers=_.range($scope.numberOfPages);},function(response){$log.log("ListMarksCtrl - getMarks() - error");$scope.isLoading=false;messagesService.showMessage('error','Failed to get text marks.',response.data);});};getMarks();$scope.refresh=function(){if(!$scope.isLoading){getMarks();}};$scope.previousPage=function(){$scope.currentPage=($scope.currentPage<1?0:$scope.currentPage-1);};$scope.nextPage=function(){$scope.currentPage=($scope.currentPage>=$scope.numberOfPages-1?$scope.currentPage:$scope.currentPage+1);};}]).controller('ListConfsCtrl',['$scope','$log','pageTitleService','conferencesService',function($scope,$log,pageTitleService,conferencesService){pageTitleService.set("List conferences");$scope.lookupName="";$scope.confs=null;$scope.isLoading=false;$scope.pageSize=10;$scope.currentPage=0;$scope.numberOfPages=1;$scope.listConfs=function(){$scope.isLoading=true;conferencesService.lookupConferences($scope.connection,$scope.lookupName,false,true).then(function(conferences){$log.log("ListConfsCtrl - listConfs() - success")
$scope.isLoading=false;$scope.confs=_.sortBy(conferences,function(conf){return conf.conf_name;});$scope.currentPage=0;$scope.numberOfPages=Math.ceil($scope.confs.length/$scope.pageSize);},function(response){$log.log("ListConfsCtrl - listConfs() - error")
$scope.isLoading=false;messagesService.showMessage('error','Failed to list conferences.',response.data);});};$scope.previousPage=function(){$scope.currentPage=($scope.currentPage<1?0:$scope.currentPage-1);};$scope.nextPage=function(){$scope.currentPage=($scope.currentPage>=$scope.numberOfPages-1?$scope.currentPage:$scope.currentPage+1);};}]).controller('GoToConfCtrl',['$scope','$location','$log','pageTitleService',function($scope,$location,$log,pageTitleService){pageTitleService.set("Go to conference");$scope.confNo=null;$scope.goToConf=function(){if($scope.confNo){$location.path('/conferences/'+parseInt($scope.confNo));}};}]).controller('GoToTextCtrl',['$scope','$location','$log','pageTitleService',function($scope,$location,$log,pageTitleService){pageTitleService.set("Go to text");$scope.textNo=null;$scope.goToText=function(){if($scope.textNo){$location.url('/texts/?text='+parseInt($scope.textNo));}};}]).controller('ListConfTextsCtrl',['$scope','$routeParams','$log','$location','pageTitleService','conferencesService','messagesService','textsService','keybindingService',function($scope,$routeParams,$log,$location,pageTitleService,conferencesService,messagesService,textsService,keybindingService){function getLastTexts(confNo){$scope.isLoadingTexts=true;textsService.getLastCreatedTextsInConference($scope.connection,confNo).then(function(texts){$log.log("ListConfTextsCtrl - getLastCreatedTextsInConference() - success");$scope.isLoadingTexts=false;$scope.texts=texts;$scope.currentPage=0;$scope.numberOfPages=Math.ceil($scope.texts.length/$scope.pageSize);},function(response){$log.log("ListConfTextsCtrl - getLastCreatedTextsInConference() - error");$scope.isLoadingTexts=false;});}
function getConference(confNo){pageTitleService.set("");conferencesService.getConference($scope.connection,confNo).then(function(conference){$log.log("ListConfTextsCtrl - getConference("+confNo+") - success");$scope.conf=conference;pageTitleService.set("Last texts in "+$scope.conf.name);getLastTexts($scope.conf.conf_no);},function(response){$log.log("ListConfTextsCtrl - getConference("+confNo+") - error");messagesService.showMessage('error','Failed to get conference.',response.data);});}
$scope.confNo=$routeParams.confNo;$scope.conf=null;$scope.isLoadingTexts=false;$scope.texts=null;$scope.membership=null;$scope.pageSize=10;$scope.currentPage=0;$scope.numberOfPages=1;getConference($scope.confNo);$scope.$watch(function(scope){return scope.membershipList.getMembership($scope.confNo);},function(newMembership){$scope.membership=newMembership;});keybindingService.bindPageSpecific(['space','j'],'Read conference',function(e){if($scope.conf!=null){$scope.$apply(function(){$location.path('/conferences/'+parseInt($scope.conf.conf_no)+"/texts/");});}
return false;});$scope.previousPage=function(){$scope.currentPage=($scope.currentPage<1?0:$scope.currentPage-1);};$scope.nextPage=function(){$scope.currentPage=($scope.currentPage>=$scope.numberOfPages-1?$scope.currentPage:$scope.currentPage+1);};}]).controller('ShowConfCtrl',['$scope','$routeParams','$log','$location','pageTitleService','conferencesService','messagesService','membershipsService','textsService',function($scope,$routeParams,$log,$location,pageTitleService,conferencesService,messagesService,membershipsService,textsService){$scope.isLoadingMembership=false;$scope.isLoadingPresentation=false;$scope.text=null;$scope.isJoining=false;$scope.isLeaving=false;$scope.membership=null;$scope.activeTab='presentation';$scope.selectTab=function(tab){$scope.activeTab=tab;};$scope.isTabActive=function(tab){if($scope.activeTab==tab){return'active';}else{return'';}};var getMembership=function(confNo){$scope.isLoadingMembership=true;$scope.membership=null;return membershipsService.getMembership($scope.connection,confNo).then(function(membership){$log.log("ShowConfCtrl - getMembership("+confNo+") - success");$scope.isLoadingMembership=false;$scope.membership=membership;return membership;},function(response){$log.log("ShowConfCtrl - getMembership("+confNo+") - error");$scope.isLoadingMembership=false;if(response.data.error_code===13){}else{messagesService.showMessage('error','Failed to get conference membership.',response.data);}});};var getPresentation=function(textNo){$scope.isLoadingPresentation=true;textsService.getText($scope.connection,textNo).then(function(text){$log.log("ShowConfCtrl - getPresentation("+textNo+") - success");$scope.isLoadingPresentation=false;$scope.text=text;},function(response){$log.log("ShowConfCtrl - getPresentation("+textNo+") - error");$scope.isLoadingPresentation=false;$scope.text=null;messagesService.showMessage('error','Failed to get presentation.',response.data);});};$scope.joinConf=function(){var confNo=$scope.conf.conf_no;$scope.isJoining=true;membershipsService.addMembership($scope.connection,confNo).then(function(){$log.log("ShowConfCtrl - addMembership("+confNo+") - success");$scope.isJoining=false;getMembership(confNo);messagesService.showMessage('success','Successfully joined conference.');},function(response){$log.log("ShowConfCtrl - addMembership("+confNo+") - error");$scope.isJoining=false;messagesService.showMessage('error','Failed to join conference.',response.data);});};$scope.leaveConf=function(){var confNo=$scope.conf.conf_no;$scope.isLeaving=true;membershipsService.deleteMembership($scope.connection,confNo).then(function(){$log.log("ShowConfCtrl - deleteMembership("+confNo+") - success");$scope.isLeaving=false;getMembership(confNo);messagesService.showMessage('success','Successfully left conference.');},function(response){$log.log("ShowConfCtrl - deleteMembership("+confNo+") - error");$scope.isLeaving=false;messagesService.showMessage('error','Failed to leave conference.',response.data);});};conferencesService.getConference($scope.connection,$routeParams.confNo).then(function(conference){$log.log("ShowConfCtrl - getConference("+$routeParams.confNo+") - success");$scope.conf=conference;getMembership($scope.conf.conf_no).then(function(){if($scope.conf.presentation!==0){getPresentation($scope.conf.presentation);}});pageTitleService.set($scope.conf.name);},function(response){$log.log("ShowConfCtrl - getConference("+$routeParams.confNo+") - error");messagesService.showMessage('error','Failed to get conference.',response.data);pageTitleService.set("");});}]).controller('ReadTextsCtrl',['$scope','$rootScope','$routeParams','$location','$log','$window','readerFactory','textsService','messagesService','pageTitleService',function($scope,$rootScope,$routeParams,$location,$log,$window,readerFactory,textsService,messagesService,pageTitleService){$scope.textNo=$location.search().text;$scope.reader=readerFactory.createReader($scope.connection);pageTitleService.set("Text "+$scope.textNo);$scope.$on('$routeUpdate',function($event){$scope.textNo=$location.search().text;pageTitleService.set("Text "+$scope.textNo);});$scope.canReadNext=function(){return $scope.reader!=null&&$scope.reader.hasPending();};$scope.preReadNextCheck=function(){if($scope.reader.hasPending()){return true;}else{return false;}};}]).controller('ReadConferenceTextsCtrl',['$scope','$rootScope','$routeParams','$log','$window','$location','$q','messagesService','textsService','pageTitleService','keybindingService','readerFactory','sessionsService','membershipsService','conferencesService',function($scope,$rootScope,$routeParams,$log,$window,$location,$q,messagesService,textsService,pageTitleService,keybindingService,readerFactory,sessionsService,membershipsService,conferencesService){function changeConference(){if($scope.connection.currentConferenceNo!==$scope.confNo){sessionsService.changeConference($scope.connection,$scope.confNo);}}
function getConference(confNo){conferencesService.getConference($scope.connection,confNo).then(function(conference){$log.log("UnreadTextsCtrl - getConference("+confNo+") - success");$scope.conf=conference;},function(response){$log.log("UnreadTextsCtrl - getConference("+confNo+") - error");messagesService.showMessage('error','Failed to get conference.',response.data);});}
function setPageTitle(){if($scope.conf!=null&&$scope.reader!=null){pageTitleService.set("("+$scope.reader.unreadCount()+") "+$scope.conf.name);}}
$scope.confNo=parseInt($routeParams.confNo);$scope.conf=null;getConference($scope.confNo);$scope.reader=readerFactory.createReader($scope.connection);if($scope.membershipList.getMembership($scope.confNo)!=null){changeConference();}
$scope.membership=null;$scope.$watch(function(scope){return scope.membershipList.getMembership($scope.confNo);},function(newMembership,oldMembership){if(newMembership!=null){$scope.membership=newMembership;$scope.reader.setMembership($scope.membership);}});pageTitleService.set("");$scope.$watch('conf',function(){setPageTitle();});$scope.$watch('reader.unreadCount()',function(){setPageTitle();});$scope.canReadNext=function(){if($scope.membership==null){return $scope.reader!=null&&$scope.reader.hasPending();}else{return $scope.reader!=null;}};$scope.preReadNextCheck=function(){if($scope.reader.isEmpty()){$location.url('/');return false;}else{return true;}};}]).controller('ReaderCtrl',['$scope','$rootScope','$routeParams','$log','$window','$location','$q','messagesService','textsService','keybindingService','readerFactory','sessionsService','readMarkingsService',function($scope,$rootScope,$routeParams,$log,$window,$location,$q,messagesService,textsService,keybindingService,readerFactory,sessionsService,readMarkingsService){function isScrolledIntoView(elem){if(elem){var docViewTop=angular.element($window).scrollTop();var docViewBottom=docViewTop+angular.element($window).height();var elemTop=angular.element(elem).offset().top;var elemBottom=elemTop+angular.element(elem).height();return((elemBottom<=docViewBottom)&&(elemTop>=docViewTop));}else{return false;}}
function markAsRead(text){$scope.connection.broadcast('jskom:readMarking:created',text);readMarkingsService.createGlobalReadMarking($scope.connection,text).then(function(){},function(response){$log.log("ReaderCtrl - markAsRead("+text.text_no+") - error");messagesService.showMessage('error','Failed to mark text as read.',response.data);$scope.connection.broadcast('jskom:readMarking:deleted',text);});}
function showText(textNo){$scope.connection.userIsActive();return $scope.showText(textNo).then(function(text){if($location.search().text!=text.text_no){if($location.search().text==null){$location.replace();}
$location.search('text',text.text_no);}
return text;});}
function readText(textNo){return showText(textNo).then(function(text){markAsRead(text);return text;});}
function showNextText(){$scope.readerTextIsLoading=false;if($scope.reader.hasPending()){showText($scope.reader.shiftPending());}else if($scope.reader.hasUnread()){$scope.readerTextIsLoading=true;$scope.reader.shiftUnread().then(function(textNo){readText(textNo).then(function(text){$scope.readerTextIsLoading=false;});});}}
$scope.$on('$routeUpdate',function(event){messagesService.clearAll(true);if(_.isUndefined($routeParams.text)){showNextText();}else{showText($routeParams.text);}});$scope.$on('jskom:a:text',function($event,textNo,href){$event.stopPropagation();showText(textNo);});$scope.canReadNext=function(){if($scope.$parent.canReadNext!=null){var parentCanReadNext=$scope.$parent.canReadNext();return parentCanReadNext&&!$scope.readerTextIsLoading&&!$scope.textIsLoading;}else{$log.log("CRITICAL! Parent scope to ReaderCtrl must implement $scope.canReadNext()");return false;}};$scope.preReadNextCheck=function(){if($scope.$parent.preReadNextCheck!=null){return $scope.$parent.preReadNextCheck();}else{$log.log("CRITICAL! Parent scope to ReaderCtrl must implement $scope.preReadNextCheck()");return false;}};$scope.readNext=function(){if($scope.preReadNextCheck()){showNextText();}};var hasInitialized=false;if($routeParams.text){readText($routeParams.text);hasInitialized=true;}else{$scope.$watch('reader.isEmpty()',function(isEmpty){if(!hasInitialized&&!isEmpty){hasInitialized=true;showNextText();}});}
$scope.showCommented=function(){$log.log('ReaderCtrl - showCommented()');if($scope.text&&!_.isEmpty($scope.text.comment_to_list)){$scope.reader.unshiftPending.apply($scope.reader,_.map($scope.text.comment_to_list,function(ct){return ct.text_no;}));if($scope.reader.hasPending()){showNextText();}}};$scope.showAllComments=function(){$log.log('ReaderCtrl - showAllComments()');if($scope.text&&!_.isEmpty($scope.text.comment_in_list)){$scope.reader.unshiftPending.apply($scope.reader,_.map($scope.text.comment_in_list,function(ci){return ci.text_no;}));if($scope.reader.hasPending()){showNextText();}}};keybindingService.bindPageSpecific([','],'Show commented',function(){$scope.$apply(function(){$scope.showCommented();});return false;});keybindingService.bindPageSpecific('j','Read next text',function(e){$scope.$apply(function(){if($scope.canReadNext()){$scope.readNext();}});return false;});keybindingService.bindPageSpecific('space','Read text',function(e){if(isScrolledIntoView(angular.element('#jskomBelowText'))){$scope.$apply(function(){if($scope.canReadNext()){$scope.readNext();}});return false;}else{return true;}});}]).controller('TextCtrl',['$scope','$log','$window','$q','messagesService','marksService','textsService',function($scope,$log,$window,$q,messagesService,marksService,textsService){$scope.marks=null;$scope.currentMark=null;function updateMarks(){$scope.currentMark=false;if($scope.marks!=null&&$scope.text!=null&&$scope.text.text_no!=null){$scope.currentMark=_.find($scope.marks,function(m){return m.text_no===$scope.text.text_no;});}}
marksService.getMarks($scope.connection).then(function(marks){$scope.marks=marks},function(response){messagesService.showMessage('error','Failed to get marked texts.',response.data);});$scope.$watch('text.text_no',function(newTextNo){updateMarks();});$scope.$watch('marks',function(newMarks){updateMarks();},true);$scope.textIsLoading=false;$scope.showText=function(textNo){$scope.textIsLoading=true;angular.element($window).scrollTop(1);return textsService.getText($scope.connection,textNo).then(function(text){$scope.textIsLoading=false;if(text.jskomBodyType=='html'){$scope.textMode='html';}else{$scope.textMode='text';}
$scope.text=text;$scope.$emit("jskom:text:shown",text);return text;},function(response){$scope.textIsLoading=false;if(response.status==404){messagesService.showMessage('error','No such text','No text with number: '+response.data.error_status);}else{messagesService.showMessage('error','Failed to get text.',response.data);}
return $q.reject(response);});};}]);'use strict';angular.module('jskom.connections',['jskom.httpkom','jskom.services']).factory('jskomCacheFactory',['$log','$cacheFactory',function($log,$cacheFactory){return function(cacheId,options){var cache=$cacheFactory(cacheId,options);return{info:cache.info,put:cache.put,get:cache.get,remove:function(key){if(!_.isUndefined(cache.get(key))){cache.remove(key);}},removeAll:cache.removeAll,destroy:cache.destroy};};}]).factory('connectionFactory',['$log','$rootScope','$q','$http','httpkom','sessionsService','jskomCacheFactory','httpkomConnectionHeader','membershipListFactory','membershipListHandlerFactory',function($log,$rootScope,$q,$http,httpkom,sessionsService,jskomCacheFactory,httpkomConnectionHeader,membershipListFactory,membershipListHandlerFactory){var newId=function(){var min=1;var max=1000000000;return"conn-"+(Math.floor(Math.random()*(max-min+1))+min);};return{createConnection:function(obj){obj=obj||{};obj.id=obj.id||newId();obj.serverId=obj.serverId||null;obj.httpkomId=obj.httpkomId||null;obj.session=obj.session||null;return new jskom.HttpkomConnection($log,$rootScope,$q,$http,sessionsService,jskomCacheFactory,httpkomConnectionHeader,membershipListFactory,membershipListHandlerFactory,httpkom.getHttpkomServer(),obj.id,obj.serverId,obj.httpkomId,obj.session);}};}]).factory('connectionsStorage',['$log','connectionFactory','messagesService',function($log,connectionFactory,messagesService){var hasStorage=false;var storage;function initialize(){try{if(!!window.localStorage){storage=window.localStorage;storage.setItem("initializationTest","123");if(storage.getItem("initializationTest")=="123"){hasStorage=true;}}else{hasStorage=false;messagesService.showMessage('warning','Failed to initialize local storage.');}}catch(e){hasStorage=false;if(e instanceof QuotaExceededError){localStorage.clear();messagesService.showMessage('warning',e.name+': Failed to initialize local storage.',e.message+" Try reloading the page.");}else if(e instanceof SecurityError){messagesService.showMessage('error',e.name+': Failed to initialize local storage.',e.message);}else{messagesService.showMessage('error',e.name+': Failed to initialize local storage.',e.message);}}}
initialize();return{saveCurrentConnectionId:function(id){if(!hasStorage)return;try{storage.removeItem("currentConnectionId");storage.setItem("currentConnectionId",id);}catch(e){messagesService.showMessage('error',e.name+': Failed to access local storage.',e.message);}},loadCurrentConnectionId:function(){if(!hasStorage)return null;try{return storage.getItem("currentConnectionId");}catch(e){messagesService.showMessage('error',e.name+': Failed to access local storage.',e.message);}},loadConnections:function(){if(!hasStorage)return{};try{var connections=angular.fromJson(storage.getItem("connections"));connections=connections||{};_.each(connections,function(connObj,id){connections[id]=connectionFactory.createConnection(connObj);connections[id].membershipListHandler.initialize();});return connections;}catch(e){$log.log("Failed to load connections: "+e)
messagesService.showMessage('error',e.name+': Failed to access local storage.',e.message);throw e;}},saveConnections:function(connections){if(!hasStorage)return;try{var objs={};_.each(connections,function(conn,id){objs[id]=conn.toObject();});storage.removeItem("connections");storage.setItem("connections",angular.toJson(objs));}catch(e){$log.log("Failed to load connections: "+e)
messagesService.showMessage('error',e.name+': Failed to access local storage.',e.message);}},};}]).factory('connectionsService',['$rootScope','$log','$q','httpkom','connectionsStorage','connectionFactory','sessionsService',function($rootScope,$log,$q,httpkom,connectionsStorage,connectionFactory,sessionsService){var connections=connectionsStorage.loadConnections();var currentConnectionId=connectionsStorage.loadCurrentConnectionId();var saveCurrentId=function(){connectionsStorage.saveCurrentConnectionId(currentConnectionId);};var saveConnections=function(){connectionsStorage.saveConnections(connections);};var addConnection=function(connection){connections[connection.id]=connection;saveConnections();};var setCurrentConnection=function(connection){if(connection){if(!connection[connection.id]){addConnection(connection);}
currentConnectionId=connection.id;}else{currentConnectionId=null;}
saveCurrentId();pruneInactiveConnections();};var removeConnection=function(connection){if(currentConnectionId==connection.id){currentConnectionId=null;saveCurrentId();}
if(connections[connection.id]){connections[connection.id].destroyAllCaches();delete connections[connection.id];}
saveConnections();if(currentConnectionId==null){var firstConn=_.first(_.values(connections));if(firstConn){setCurrentConnection(firstConn);}else{createNewConnectionPromise().then(function(newConn){setCurrentConnection(newConn);});}}};var pruneInvalidConnections=function(servers){_.each(connections,function(conn){if(!_.has(servers,conn.serverId)){$log.log("connectionsService - removing invalid connection (unknown serverId: "+
conn.serverId+"): "+conn.id);removeConnection(conn);}});};var serversPromise=httpkom.getLyskomServers().then(function(response){$log.log("connectionsService - getServers() - success");pruneInvalidConnections(response.data);pruneInactiveConnections();return response.data;},function(response){$log.log("connectionsService - getServers() - error");return $q.reject(response);});var createNewConnectionPromise=function(){var deferred=$q.defer();var promise=deferred.promise;serversPromise.then(function(servers){var sortedServerList=_.sortBy(_.values(servers),function(s){return s.sort_order;});var firstServer=_.first(sortedServerList);var serverId=null;if(firstServer){serverId=firstServer.id;}
var conn=connectionFactory.createConnection({serverId:serverId});deferred.resolve(conn);},function(response){deferred.reject(response);});return promise;};var pruneInactiveConnections=function(){_.each(connections,function(conn){if(conn.id!=currentConnectionId&&!conn.isLoggedIn()){$log.log("connectionsService - removing inactive connection: "+conn.id);if(conn.isConnected()){sessionsService.deleteSession(conn,0).then(function(){removeConnection(conn);});}else{removeConnection(conn);}}});};$rootScope.$on('jskom:connection:changed',function($event,connection){$log.log('connectionsService - on(jskom:connection:changed)');saveConnections();});return{getServers:function(){return serversPromise;},newConnectionPromise:function(){return createNewConnectionPromise();},getCurrentConnection:function(){return connections[currentConnectionId];},setCurrentConnection:function(connection){setCurrentConnection(connection);},addConnection:function(connection){addConnection(connection);},removeConnection:function(connection){removeConnection(connection);},getConnections:function(){return connections;},};}]);'use strict';angular.module('jskom.directives',['jskom.services','ngSanitize']).directive('jskomLoading',[function(){return{restrict:'E',replace:true,template:'<p><i class="icon-spinner icon-spin"></i> Loading...</p>',};}]).directive('jskomDropdownToggle',['$log','templatePath',function($log,templatePath){var showDropdownClass="show-dropdown";return{restrict:'E',template:'<div ng-click="toggleDropdown($event)" ng-transclude></div>',transclude:true,replace:true,scope:true,link:function($scope,iElement,iAttrs){var dropdown=iElement.find('ul.dropdown-menu');$scope.isOpen=false;$scope.toggleDropdown=function($event){if($scope.isOpen){dropdown.removeClass(showDropdownClass);$scope.isOpen=false;}else{dropdown.addClass(showDropdownClass);$scope.isOpen=true;}};}};}]).directive('jskomTopBar',['$log','$window','templatePath',function($log,$window,templatePath){var getMenuHeight=function(element){var total=0;var count=0;element.children('li:visible').each(function(){total+=angular.element(this).outerHeight(true);count+=1;});var extra=10+((count-1)*3);return total+extra;};return{restrict:'E',templateUrl:templatePath('topbar.html'),link:function($scope,iElement,iAttrs){$scope.topbar=iElement.find('nav.top-bar');$scope.section=$scope.topbar.find('section');$scope.titleBar=$scope.topbar.children('ul:first');$scope.isTopBarExpanded=false;$scope.menuLevel=0;$scope.activeMenu=null;var resetMenu=function(){$scope.activeMenu=null;$scope.menuLevel=0;$scope.topbar.css('min-height','');$scope.topbar.css('height','');$scope.topbar.find('section ul ul').each(function(){angular.element(this).css('height','');});};$scope.isExpanded=function(){if($scope.isTopBarExpanded){return'expanded';}else{return'';}};$scope.toggleExpanded=function($event){$event.stopPropagation();if($scope.isTopBarExpanded){$scope.unexpandTopBar();}else{$scope.isTopBarExpanded=true;}};$scope.unexpandTopBar=function(){$scope.isTopBarExpanded=false;resetMenu();};$scope.closeMenu=function($event){$event.stopPropagation();resetMenu();};$scope.openMenu=function($event,menu){if(!$scope.isExpanded()){return;}
$event.stopPropagation();$scope.activeMenu=menu;$scope.menuLevel=1;var target=angular.element($event.target);var selectedLi=target.closest('li');var dropdownUl=selectedLi.find('ul');var height=getMenuHeight(dropdownUl);var titleBarHeight=$scope.titleBar.outerHeight(true);dropdownUl.height(height);var outerHeight=dropdownUl.outerHeight(true);$scope.topbar.height(outerHeight+titleBarHeight);};$scope.isMenuOpen=function(menu){if($scope.activeMenu==menu){return'moved';}else{return'';}};angular.element($window).resize(function(){$scope.$apply(function(){if($scope.isTopBarExpanded){$scope.unexpandTopBar();}});});}};}]).directive('jskomBindBody',['$log','htmlFormattingService',function($log,htmlFormattingService){return{restrict:'A',link:function(scope,iElement,iAttrs){scope.$watch(iAttrs.jskomBindBody,function(value){var str;if(!value){str="";}
else if(_.isObject(value)){str=angular.toJson(value);}else{str=value.toString();}
var formattedBody=htmlFormattingService.formatBody(str);var templateHtml=angular.element('<p>'+formattedBody+'</p>');iElement.html(templateHtml);});}};}]).directive('jskomBindLinkified',['$log','$compile','htmlFormattingService',function($log,$compile,htmlFormattingService){return{restrict:'A',link:function(scope,iElement,iAttrs){scope.$watch(iAttrs.jskomBindLinkified,function(value){var str;if(!value){str="";}
else if(_.isObject(value)){str=angular.toJson(value);}else{str=value.toString();}
var formattedBody=htmlFormattingService.linkifyLyskomLinks(str);var templateHtml=angular.element('<span>'+formattedBody+'</span>');$compile(templateHtml)(scope);iElement.html(templateHtml);});}};}]).directive('jskomA',['$log','$location','$rootScope',function($log,$location,$rootScope){var textEmit='jskom:a:text';var confEmit='jskom:a:conference';$rootScope.$on(textEmit,function($event,textNo,href){$event.stopPropagation();$location.url(href);});$rootScope.$on(confEmit,function($event,confNo,href){$event.stopPropagation();$location.url(href);});return{restrict:'E',replace:true,template:'<a ng-href="{{href}}" ng-click="click($event)" ng-transclude></a>',transclude:true,scope:{textNo:'@',confNo:'@'},link:function(scope,iElement,iAttrs){scope.$watch('textNo',function(newValue){if(newValue){scope.href='/texts/?text='+newValue;}});scope.$watch('confNo',function(newValue){if(newValue){scope.href='/conferences/'+newValue;}});scope.click=function($event){if(!($event.ctrlKey||$event.altKey||$event.shiftKey||$event.metaKey)){$event.stopPropagation();$event.preventDefault();if(scope.textNo){scope.$emit(textEmit,scope.textNo,iAttrs.href);}else if(scope.confNo){scope.$emit(confEmit,scope.confNo,iAttrs.href);}}};}};}]).directive('jskomAutofocus',['$log','modernizr',function($log,modernizr){return{restrict:'A',link:function(scope,iElement,iAttrs,controller){var el=angular.element(iElement);if(!modernizr.touch){if(el.is('input')||el.is('textarea')){el.focus();}else{el.find('input[type=text],textarea,select').filter(':visible:first').focus();}}}};}]).directive('jskomConfInput',['$log','$window','$timeout','templatePath','conferencesService','messagesService','sessionsService',function($log,$window,$timeout,templatePath,conferencesService,messagesService,sessionsService){var errorMsgText=function(wantPers,wantConfs){if(!wantPers){return"conference";}else if(!wantConfs){return"person";}else{return"conference or person";}};return{restrict:'E',replace:true,templateUrl:templatePath('conf_input.html'),scope:{model:'=',conn:'='},controller:['$scope',function(scope){scope.isLoading=false;scope.getLoadingClass=function(){if(scope.isLoading){return'icon-refresh';}else{return'icon-search icon-white';}};scope.wantPers=true;scope.wantConfs=true;scope.disconnectOnClear=false;scope.matches=[];scope.lookup='';scope.conf=null;scope.$watch('model',function(newModel,oldModel){if(newModel){if(newModel!==oldModel||scope.conf==null){var isModelInMatches=_.any(scope.matches,function(match){return match.conf_no===newModel;});if(!isModelInMatches){scope.clearMatching();scope.lookup='#'+newModel;scope.getConf();}}}else{scope.clearMatching();}});scope.clearMatching=function(){function clear(){scope.conf=null;scope.matches=[];}
if(scope.disconnectOnClear&&scope.conn.isConnected()){sessionsService.deleteSession(scope.conn,0).then(clear,clear);}else{clear();}};scope.getConf=function(){if(scope.isLoading||!(scope.lookup&&scope.lookup.length>0)||scope.conf){return;}
scope.isLoading=true;conferencesService.lookupConferences(scope.conn,scope.lookup,scope.wantPers,scope.wantConfs).then(function(conferences){$log.log("<jskom:conf-input> - lookupConferences("+scope.lookup+") - success");scope.isLoading=false;scope.matches=conferences;if(scope.matches.length>0){scope.conf=scope.matches[0];scope.model=scope.conf.conf_no;}else{scope.conf=null;scope.model=null;messagesService.showMessage('error','Could not find any '+
errorMsgText(scope.wantPers,scope.wantConfs)+' with that name.');}},function(response){$log.log("<jskom:conf-input> - lookupConferences("+scope.lookup+") - error");scope.isLoading=false;messagesService.showMessage('error','Failed to lookup '+
errorMsgText(scope.wantPers,scope.wantConfs)+'.',response.data);});};}],link:function(scope,iElement,iAttrs){var lookupInputEl=iElement.find('.jskomConfInputLookup input');angular.element(lookupInputEl).bind('keydown',function(e){if(e.keyCode==13){scope.getConf();}});lookupInputEl.bind('blur',function(e){scope.getConf();});if(('onlyPers'in iAttrs)){scope.wantConfs=false;}
if(('onlyConfs'in iAttrs)){scope.wantPers=false;}
if(('disconnectOnClear'in iAttrs)){scope.disconnectOnClear=true;}
if(('autofocus'in iAttrs)){lookupInputEl.focus();}}};}]);'use strict';angular.module('jskom.filters',['jskom.templates']).filter('textDate',[function(){function mxDateToISO8601(mxDate){var d=new Date(mxDateToTimestamp(mxDate)*1000);return d.toISOString();}
function mxDateToTimestamp(mxDate){var utcMs=Date.UTC(parseInt(mxDate.data.substr(0,4),10),parseInt(mxDate.data.substr(5,2),10)-1,parseInt(mxDate.data.substr(8,2),10),parseInt(mxDate.data.substr(11,2),10),parseInt(mxDate.data.substr(14,2),10),parseInt(mxDate.data.substr(17,2),10));var tzOffset=(parseInt(mxDate.data.substr(20,3),10)*3600)+
(parseInt(mxDate.data.substr(23,2),10)*60);return(utcMs/1000)-tzOffset;}
return function(text){if(text){var alternateDate=_.find(text.aux_items,function(aux_item){if((aux_item.tag=='komfeeder-date')||(aux_item.tag=='mx-date')){return true;}else{return false;}});try{if(alternateDate){return mxDateToISO8601(alternateDate);}else{return text.creation_time;};}catch(err){return null;}}else{return null;}};}]).filter('dateString',['$filter',function($filter){return function(iso8601Date){if(iso8601Date===null){return null;}
return $filter('date')(Date.parse(iso8601Date),'yyyy-MM-dd HH:mm:ss');};}]).filter('textAuthor',['$filter',function($filter){return function(text){if(text){var alternateAuthor=_.find(text.aux_items,function(aux_item){if((aux_item.tag=='komfeeder-author')||(aux_item.tag=='mx-author')){return true;}else{return false;}});if(alternateAuthor){return alternateAuthor.data;}else{return $filter('personName')(text.author);};}else{return"";}};}]).filter('textExtraInfo',['$filter',function($filter){return function(text){if(text){var mxAuthor=_.find(text.aux_items,function(aux_item){return aux_item.tag=='mx-author';});var mxDate=_.find(text.aux_items,function(aux_item){return aux_item.tag=='mx-date';});if(mxAuthor&&mxDate){return"Imported "+$filter('dateString')(text.creation_time)+" by "+$filter('personName')(text.author);}else if(mxAuthor){return"Imported by "+$filter('personName')(text.author);}else if(mxDate){return"Created at "+$filter('dateString')(text.creation_time);}else{return"";}}else{return"";}};}]).filter('confTitle',['$filter',function($filter){return function(conf){if(conf){var alternateTitle=_.find(conf.aux_items,function(aux_item){if(aux_item.tag=='komfeeder-title'){return true;}else{return false;}});if(alternateTitle){return alternateTitle.data;}else{return conf.name;}}else{return"";}};}]).filter('hasKomfeederUrl',['$filter',function($filter){return function(confOrText){if(confOrText){var url=_.find(confOrText.aux_items,function(aux_item){if(aux_item.tag=='komfeeder-url'){return true;}else{return false;}});if(url){return true;}else{return false;}}else{return false;}};}]).filter('komfeederUrl',['$filter',function($filter){return function(confOrText){if(confOrText){var url=_.find(confOrText.aux_items,function(aux_item){if(aux_item.tag=='komfeeder-url'){return true;}else{return false;}});if(url){return url.data;}else{return null;}}else{return null;}};}]).filter('confName',[function(){return function(conf){if(conf){return conf.conf_name;}else{return"";}};}]).filter('confType',[function(){return function(conf){if(conf){if(conf.type.letterbox===0){return"Conference";}else if(conf.type.letterbox===1){return"Person";}else{return"Unknown";}}else{return"";}};}]).filter('personName',[function(){return function(person){if(person){if(person.pers_no==0){return"Anonymous person";}else{return person.pers_name;}}else{return"";}};}]).filter('serverName',[function(){return function(server){return server.name+" ("+server.host+":"+server.port+")";};}]).filter('startFrom',[function(){return function(arr,start){if(arr){return arr.slice(parseInt(start));}else{return[];}};}]).filter('alertBoxClass',[function(){return function(level){if(level==='error'){return'alert';}else if(level==='success'){return'success';}else{return'';}};}]).filter('capitalize',[function(){return function(str){if(_.isString(str)){return str.charAt(0).toUpperCase()+str.slice(1);}else{return str;}};}]).filter('auxitemtag',[function(){return function(auxitemList,tag){if(auxitemList==null){return null;}else{var auxitems=_.filter(auxitemList,function(auxitem){if(auxitem.tag==tag){return true;}else{return false;}});return auxitems;}};}]).filter('isUnread',['$log',function($log){return function(textNo,membership){if(membership!=null&&membership.unread_texts!=null){if(membership.unread_texts.indexOf(parseInt(textNo,10))!==-1){return true;}else{return false;}}else{return false;}};}]);'use strict';angular.module('jskom.keybindings',[]).factory('keybindingService',['$log','$rootScope',function($log,$rootScope){Mousetrap.reset();var generalKeyBindings=[];var pageSpecificKeyBindings=[];var resetBindings=function(){_.each(pageSpecificKeyBindings,function(kb){_.each(kb.keys,function(key){unbindKey(key);});});pageSpecificKeyBindings=[];};var removeBindingsForKey=function(key){var removeKeyFromKeyBindings=function(keyBindings){var keep=[];_.each(keyBindings,function(keyBinding){if(_.include(keyBinding.keys,key)){unbindKey(key);if(_.size(keyBinding.keys)>1){keyBinding.keys=_.without(keyBinding.keys,key);keep.push(keyBinding);}}else{keep.push(keyBinding);}});return keep;}
generalKeyBindings=removeKeyFromKeyBindings(generalKeyBindings);pageSpecificKeyBindings=removeKeyFromKeyBindings(pageSpecificKeyBindings);};var addBinding=function(keyBinding){if(_.isString(keyBinding.keys)){var keyArr=[keyBinding.keys];keyBinding.keys=keyArr;};_.each(keyBinding.keys,function(key){removeBindingsForKey(key);bindKey(key,keyBinding.callback);});if(keyBinding.isPageSpecific){pageSpecificKeyBindings.push(keyBinding);}else{generalKeyBindings.push(keyBinding);}};var bindKey=function(key,callbackFn){Mousetrap.bind(key,callbackFn);};var unbindKey=function(key){Mousetrap.unbind(key);};$rootScope.$on('$routeChangeStart',function(){resetBindings();});return{bindGeneral:function(keys,description,callbackFn){addBinding({keys:keys,isPageSpecific:false,description:description,callback:callbackFn});},bindPageSpecific:function(keys,description,callbackFn){addBinding({keys:keys,isPageSpecific:true,description:description,callback:callbackFn});},reset:function(){resetBindings();},getGeneralBindings:function(){return generalKeyBindings;},getPageSpecificBindings:function(){return pageSpecificKeyBindings;},};}]).run(['$log','$location','$rootScope','$routeParams','$window','keybindingService',function($log,$location,$rootScope,$routeParams,$window,keybindingService){keybindingService.bindGeneral('g','Go to conference...',function(e){$rootScope.$apply(function(){$location.url('/conferences/go-to');});return false;});keybindingService.bindGeneral('p','Browser history back',function(e){$rootScope.$apply(function(){$window.history.back();});return false;});keybindingService.bindGeneral('n','Browser history forward',function(e){$rootScope.$apply(function(){$window.history.forward();});return false;});keybindingService.bindGeneral('i','New text...',function(e){$rootScope.$apply(function(){if(!_.isUndefined($routeParams.confNo)){$location.url('/conferences/'+$routeParams.confNo+'/texts/new');}else{$location.url('/texts/new');}});return false;});keybindingService.bindGeneral('e','Set unread...',function(e){$rootScope.$apply(function(){if(!_.isUndefined($routeParams.confNo)){$location.url("/conferences/"+$routeParams.confNo+"/set-unread");}else{$location.url("/conferences/set-unread");}});return false;});}]);'use strict';angular.module('jskom.services',['jskom.settings']).factory('htmlFormattingService',['$log',function($log){var escape={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"};var badChars=/&(?!\w+;)|[<>"'`]/g;var possible=/[&<>"'`]/;var escapeChar=function(chr){return escape[chr]||"&amp;";};var escapeExpression=function(string){if(string==null||string===false){return"";}
if(!possible.test(string)){return string;}
return string.replace(badChars,escapeChar);};var urlRegexp=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi;var lyskomTextNumberRegexp=/\b([0-9]{4,})\b/g;var lyskomTextLinkRegexp=/<text\s+([0-9]+)\s*(?::[^<>]*)?\s*>/gi;var lyskomConfLinkRegexp=/<(?:person|möte)\s+([0-9]+)\s*(?::[^<>]*)?\s*>/gi;var lyskomUrlLinkRegexp=/<url:?\s*([^\s>]+)\s*>/gi;var lineBreakRegexp=/\r?\n|\r/g;var replaceMultiple=function(unescapedStr,replacers){var i=0;var replace=function(str,regexp,replaceFunc,tmpObj){str=str.replace(regexp,function(match){var holder='#@@'+i+'@@%';tmpObj[holder]=replaceFunc.apply(null,arguments);++i;return holder;});return str;};var tmp={};_.each(replacers,function(replacer){unescapedStr=replace(unescapedStr,replacer.regexp,replacer.func,tmp);});var escapedStr=escapeExpression(unescapedStr);_.each(tmp,function(value,key){escapedStr=escapedStr.replace(key,value);});return escapedStr;};return{formatBody:function(rawBody){var escaped=replaceMultiple(rawBody,[{regexp:lyskomTextLinkRegexp,func:function(match,p1){return'<a href="/texts/?text='+p1+'">'+escapeExpression(match)+'</a>';}},{regexp:lyskomConfLinkRegexp,func:function(match,p1){return'<a href="/conferences/'+p1+'">'+escapeExpression(match)+'</a>';}},{regexp:lyskomUrlLinkRegexp,func:function(match,p1){return'<a target="_blank" href="'+p1+'">'+escapeExpression(match)+'</a>';}},{regexp:urlRegexp,func:function(match){var url=match;if(url.indexOf("://")===-1){url="http://"+url;}
return'<a target="_blank" href="'+url+'">'+escapeExpression(match)+'</a>';}},{regexp:lyskomTextNumberRegexp,func:function(match,p1){return'<a href="/texts/?text='+match+'">'+escapeExpression(match)+'</a>';}},{regexp:lineBreakRegexp,func:function(match,p1){return'<br/>';}},]);return escaped;},escapeHtml:function(htmlStr){return escapeExpression(htmlStr);},formatLineBreaks:function(htmlStr){return htmlStr.replace(/\r?\n|\r/g,"<br/>");},linkifyUrls:function(htmlStr){var replacer=function(match,p1){return'<a target="_blank" href="'+encodeURI(p1)+'">'+p1+'</a>';};return htmlStr.replace(urlRegexp,replacer);},linkifyLyskomLinks:function(htmlStr){var replacer=function(match,p1){return'<a href="/texts/?text='+encodeURI(p1)+'">'+p1+'</a>';};return htmlStr.replace(lyskomTextNumberRegexp,replacer);}};}]).factory('pageTitleService',['$window',function($window){return{set:function(title){if(title&&title.length>0){$window.document.title=title+" - jskom";}else{$window.document.title="jskom";}}};}]).factory('messagesService',['$rootScope','$log',function($rootScope,$log){var messages=[];var clearMessages=function(keepShowAfterUrlChange){var newMessages=[];if(keepShowAfterUrlChange){newMessages=_.filter(messages,function(msg){return msg.showAfterUrlChange;});_.each(newMessages,function(msg){msg.showAfterUrlChange=false;});}
messages=newMessages;};$rootScope.$on('$routeChangeSuccess',function(){clearMessages(true);});return{newMessage:function(level,heading,text,showAfterUrlChange){return{level:level,heading:heading,text:text,showAfterUrlChange:showAfterUrlChange};},showMessage:function(level,heading,text,showAfterUrlChange){return this.show(this.newMessage(level,heading,text,showAfterUrlChange));},show:function(message){messages.push(message);},getMessages:function(){return messages;},clearAll:function(keepShowAfterUrlChange){clearMessages(keepShowAfterUrlChange);},};}]).factory('sessionsService',['$rootScope','$log','$q','messagesService','jskomName','jskomVersion','httpkomConnectionHeader',function($rootScope,$log,$q,messagesService,jskomName,jskomVersion,httpkomConnectionHeader){var clientInfo={name:jskomName,version:jskomVersion};return{createSession:function(conn){var request={method:'post',url:'/sessions/',data:{client:clientInfo}};return conn.http(request,false,false).then(function(response){conn.httpkomId=response.data.connection_id;var session=_.clone(response.data);delete session.connection_id;conn.session=session;conn.clearAllCaches();$rootScope.$broadcast('jskom:connection:changed',conn);conn.broadcast('jskom:session:created',session);return session;});},deleteSession:function(conn,sessionNo){return conn.http({method:'delete',url:'/sessions/'+sessionNo},true,false).then(function(response){if(sessionNo==0||sessionNo==conn.session.session_no){conn.httpkomId=null;conn.session=null;conn.clearAllCaches();$rootScope.$broadcast('jskom:connection:changed',conn);conn.broadcast('jskom:session:deleted');}
return response.data;});},userIsActive:function(conn){return conn.http({method:'post',url:'/sessions/current/active'},true,true);},newPerson:function(persNo){persNo=persNo||null;return{pers_name:'',pers_no:persNo,passwd:''};},login:function(conn,person){var self=this;var request={method:'post',url:'/sessions/current/login',data:person};return conn.http(request,true,false).then(function(response){conn.session.person=response.data;conn.clearAllCaches();conn.userIsActive();$rootScope.$broadcast('jskom:connection:changed',conn);conn.broadcast('jskom:session:changed');return response.data;});},logout:function(conn){return conn.http({method:'post',url:'/sessions/current/logout'},true,true).then(function(response){conn.session.person=null;conn.clearAllCaches();$rootScope.$broadcast('jskom:connection:changed',conn);conn.broadcast('jskom:session:changed');return response.data;});},changeConference:function(conn,confNo){confNo=parseInt(confNo);var request={method:'post',url:'/sessions/current/working-conference',data:{conf_no:confNo}};var previousConfNo=conn.currentConferenceNo;conn.currentConferenceNo=confNo;return conn.http(request,true,true).then(function(response){$log.log("sessionsService - changeConference("+confNo+")");conn.currentConferenceNo=confNo;if(previousConfNo!==0){conn.broadcast('jskom:membership:changed:',previousConfNo);}},function(response){conn.currentConferenceNo=previousConfNo;return $q.reject(response);});}};}]).factory('textsService',['$log','$q',function($log,$q){var enhanceText=function(conn,text){var mimeType=Mimeparse.parseMimeType(text.content_type);if(mimeType[0]=='text'&&mimeType[1]=='html'){text.jskomBodyType='html';}else{text.jskomBodyType=mimeType[0];}
if(text.jskomBodyType=='image'){text.jskomImageUrl=conn.urlFor('/texts/'+text.text_no+'/body',true);}else{text.jskomImageUrl=null;}
text.jskomFastReplies=null;if(text.aux_items){text.jskomFastReplies=_.filter(text.aux_items,function(aux_item){return aux_item.tag=='fast-reply';});}
return text;};return{getText:function(conn,textNo){textNo=textNo.toString();var cachedResp=conn.textsCache.get(textNo);if(cachedResp){return cachedResp;}else{var deferred=$q.defer();var promise=deferred.promise;conn.http({method:'get',url:'/texts/'+textNo},true,true).then(function(response){$log.log("textsService - getText("+textNo+") - success");response.data=enhanceText(conn,response.data);conn.broadcast('jskom:text:fetched',response.data);deferred.resolve(response.data);},function(response){$log.log("textsService - getText("+textNo+") - error");conn.textsCache.remove(textNo);deferred.reject(response);});conn.textsCache.put(textNo,promise);return promise;}},getLastCreatedTextsInConference:function(conn,confNo){return conn.http({method:'get',url:'/conferences/'+confNo+'/texts/',params:{"no-of-texts":100}},true,true).then(function(response){$log.log("textsService - getLastCreatedTextsInConference("+confNo+") - success");response.data=response.data.texts;_.each(response.data,function(text){conn.broadcast('jskom:text:fetched',text);});return response.data;});},createText:function(conn,text){var self=this;return conn.http({method:'post',url:'/texts/',data:text},true,true).then(function(response){_.each(text.comment_to_list,function(commentedText){conn.textsCache.remove(commentedText.text_no.toString());});conn.broadcast('jskom:text:created',response.data.text_no,text.recipient_list);return response.data;});},updateTextInCache:function(conn,textNo,textUpdateFunction){var cachedResp=conn.textsCache.get(textNo.toString());if(cachedResp!=null){cachedResp.then(function(cachedText){if(cachedText!=null){textUpdateFunction(cachedText);}});}}};}]).factory('conferencesService',['$log',function($log){return{lookupConferences:function(conn,name,wantPers,wantConfs){return conn.http({method:'get',url:'/conferences/',params:{"name":name,"want-pers":wantPers,"want-confs":wantConfs}},true,false).then(function(response){return response.data.conferences;});},getConference:function(conn,confNo,options){options=_.isUndefined(options)?{}:options;_.defaults(options,{micro:false});return conn.http({method:'get',url:'/conferences/'+confNo,params:{"micro":options.micro}},true,true).then(function(response){return response.data;});},};}]).factory('personsService',['$log',function($log){return{newPerson:function(){return{name:'',passwd:''};},createPerson:function(conn,person){var data={name:person.name,passwd:person.passwd};return conn.http({method:'post',url:'/persons/',data:data},true,false).then(function(response){return response.data;});}};}]).factory('membershipsService',['$log','$q',function($log,$q){return{setNumberOfUnreadTexts:function(conn,confNo,noOfUnread){var data={no_of_unread:parseInt(noOfUnread)};return conn.http({method:'post',url:'/persons/current/memberships/'+confNo+'/unread',data:data},true,true).then(function(response){conn.broadcast('jskom:membership:changed',confNo);conn.broadcast('jskom:membershipUnread:changed',confNo);});},addMembership:function(conn,confNo){return this.addMembershipForPerson(conn,conn.getPersNo(),confNo);},addMembershipForPerson:function(conn,persNo,confNo){var data={priority:100};return conn.http({method:'put',url:'/persons/'+persNo+'/memberships/'+confNo,data:data},true,true).then(function(response){if(conn.getPersNo()===persNo){conn.broadcast('jskom:membership:created',confNo);}});},deleteMembership:function(conn,confNo){return this.deleteMembershipForPerson(conn,conn.getPersNo(),confNo);},deleteMembershipForPerson:function(conn,persNo,confNo){return conn.http({method:'delete',url:'/persons/'+persNo+'/memberships/'+confNo},true,true).then(function(response){if(conn.getPersNo()===persNo){conn.broadcast('jskom:membership:deleted',confNo);}});},getMembership:function(conn,confNo){return this.getMembershipForPerson(conn,conn.getPersNo(),confNo);},getMembershipForPerson:function(conn,persNo,confNo){return conn.http({method:'get',url:'/persons/'+persNo+'/memberships/'+confNo},true,true).then(function(response){$log.log('membershipsService - getMembershipForPerson('+
persNo+', '+confNo+') - success');return response.data;},function(response){$log.log('membershipsService - getMembershipForPerson('+
persNo+', '+confNo+') - error');return $q.reject(response);});},getMemberships:function(conn,options){return this.getMembershipsForPerson(conn,conn.getPersNo(),options);},getMembershipsForPerson:function(conn,persNo,options){options=_.isUndefined(options)?{unread:false}:options;var params={"unread":options.unread};if(!_.isUndefined(options.first)){params["first"]=options.first;}
if(!_.isUndefined(options.noOfMemberships)){params["no-of-memberships"]=options.noOfMemberships;}
var logPrefix='membershipsService - getMembershipsForPerson('+persNo+', '+angular.toJson(options)+') - ';return conn.http({method:'get',url:'/persons/'+persNo+'/memberships/',params:params},true,true).then(function(response){$log.log(logPrefix+'success');return response.data;},function(response){$log.log(logPrefix+'error');return $q.reject(response);});},getMembershipUnread:function(conn,confNo){return this.getMembershipUnreadForPerson(conn,conn.getPersNo(),confNo);},getMembershipUnreadForPerson:function(conn,persNo,confNo){var logPrefix='membershipsService - getMembershipUnreadForPerson('+
persNo+', '+confNo+') - ';return conn.http({method:'get',url:'/persons/'+persNo+'/memberships/'+confNo+'/unread'},true,true).then(function(response){$log.log(logPrefix+'success');return response.data;},function(response){$log.log(logPrefix+'error');return $q.reject(response);});},getMembershipUnreads:function(conn){return this.getMembershipUnreadsForPerson(conn,conn.getPersNo());},getMembershipUnreadsForPerson:function(conn,persNo){var logPrefix='membershipsService - getMembershipUnreadsForPerson('+persNo+') - ';return conn.http({method:'get',url:'/persons/'+persNo+'/memberships/unread/'},true,true).then(function(response){$log.log(logPrefix+'success');return response.data.list;},function(response){$log.log(logPrefix+'error');return $q.reject(response);});},};}]).factory('marksService',['$log','$q','textsService',function($log,$q,textsService){var cacheKey="marks";function updateMarksCache(conn,updateFunction){var cachedResp=conn.marksCache.get(cacheKey);if(cachedResp!=null){cachedResp.then(function(marks){updateFunction(marks);});}}
return{getMarks:function(conn){var cachedResp=conn.marksCache.get(cacheKey);if(cachedResp){$log.log("marksService - getMarks() - cached");return cachedResp;}else{var deferred=$q.defer();var promise=deferred.promise;conn.http({method:'get',url:'/texts/marks/'},true,true).then(function(response){$log.log("marksService - getMarks() - success");deferred.resolve(response.data.marks);},function(response){$log.log("marksService - getMarks() - error");conn.marksCache.remove(cacheKey);deferred.reject(response);});conn.marksCache.put(cacheKey,promise);return promise;}},createMark:function(conn,textNo,type){var request={method:'put',url:'/texts/'+textNo+'/mark',data:{type:type}};return conn.http(request,true,true).then(function(){updateMarksCache(conn,function(marks){var existing=_.find(marks,function(m){return m.text_no===textNo;});if(existing==null){marks.push({text_no:textNo,type:type});}else{existing.type=type;}});textsService.updateTextInCache(conn,textNo,function(text){if(text.no_of_marks!=null){text.no_of_marks+=1;}});});},deleteMark:function(conn,textNo){var request={method:'delete',url:'/texts/'+textNo+'/mark'};return conn.http(request,true,true).then(function(){updateMarksCache(conn,function(marks){var existing=_.find(marks,function(m){return m.text_no===textNo;});if(existing!=null){var idx=marks.indexOf(existing);if(idx!==-1){marks.splice(idx,1);}}});textsService.updateTextInCache(conn,textNo,function(text){if(text.no_of_marks!=null){text.no_of_marks-=1;}});});}};}]).factory('readMarkingsService',['$log','$rootScope','membershipsService',function($log,$rootScope,membershipsService){return{createGlobalReadMarking:function(conn,text){var request={method:'put',url:'/texts/'+text.text_no+'/read-marking'};return conn.http(request,true,true).then(function(response){conn.broadcast('jskom:readMarking:created',text);return response.data;});},deleteGlobalReadMarking:function(conn,text){var request={method:'delete',url:'/texts/'+text.text_no+'/read-marking'};return conn.http(request,true,true).then(function(response){conn.broadcast('jskom:readMarking:deleted',text);return response.data;});},};}]).factory('imageService',['$window','$q','$rootScope',function($window,$q,$rootScope){function resample_single(canvas,width,height,resize_canvas){var width_source=canvas.width;var height_source=canvas.height;width=Math.round(width);height=Math.round(height);var ratio_w=width_source/width;var ratio_h=height_source/height;var ratio_w_half=Math.ceil(ratio_w/2);var ratio_h_half=Math.ceil(ratio_h/2);var ctx=canvas.getContext("2d");var img=ctx.getImageData(0,0,width_source,height_source);var img2=ctx.createImageData(width,height);var data=img.data;var data2=img2.data;for(var j=0;j<height;j++){for(var i=0;i<width;i++){var x2=(i+j*width)*4;var weight=0;var weights=0;var weights_alpha=0;var gx_r=0;var gx_g=0;var gx_b=0;var gx_a=0;var center_y=(j+0.5)*ratio_h;var yy_start=Math.floor(j*ratio_h);var yy_stop=Math.ceil((j+1)*ratio_h);for(var yy=yy_start;yy<yy_stop;yy++){var dy=Math.abs(center_y-(yy+0.5))/ratio_h_half;var center_x=(i+0.5)*ratio_w;var w0=dy*dy;var xx_start=Math.floor(i*ratio_w);var xx_stop=Math.ceil((i+1)*ratio_w);for(var xx=xx_start;xx<xx_stop;xx++){var dx=Math.abs(center_x-(xx+0.5))/ratio_w_half;var w=Math.sqrt(w0+dx*dx);if(w>=1){continue;}
weight=2*w*w*w-3*w*w+1;var pos_x=4*(xx+yy*width_source);gx_a+=weight*data[pos_x+3];weights_alpha+=weight;if(data[pos_x+3]<255)
weight=weight*data[pos_x+3]/250;gx_r+=weight*data[pos_x];gx_g+=weight*data[pos_x+1];gx_b+=weight*data[pos_x+2];weights+=weight;}}
data2[x2]=gx_r/weights;data2[x2+1]=gx_g/weights;data2[x2+2]=gx_b/weights;data2[x2+3]=gx_a/weights_alpha;}}
if(resize_canvas===true){canvas.width=width;canvas.height=height;}else{ctx.clearRect(0,0,width_source,height_source);}
ctx.putImageData(img2,0,0);}
return{resizeImage:function(imageDataUrl,maxWidth,maxHeight){var deferred=$q.defer();var canvas=$window.document.createElement('canvas');var ctx=canvas.getContext('2d');var img=new Image();img.onload=function(){canvas.width=img.naturalWidth;canvas.height=img.naturalHeight;ctx.drawImage(img,0,0);var scaleFactor=1;if(canvas.width>maxWidth){var scaleWidth=maxWidth/canvas.width;if(scaleWidth<scaleFactor){scaleFactor=scaleWidth;}}
if(canvas.height>maxHeight){var scaleHeight=maxHeight/canvas.height;if(scaleHeight<scaleFactor){scaleFactor=scaleHeight;}}
var newWidth=parseInt(canvas.width*scaleFactor);var newHeight=parseInt(canvas.height*scaleFactor);resample_single(canvas,newWidth,newHeight,true);var resultDataUrl=canvas.toDataURL('image/jpeg',0.85)
deferred.resolve(resultDataUrl);$rootScope.$apply();};img.src=imageDataUrl;return deferred.promise;}};}]).factory('readerFactory',['$log','$q','textsService',function($log,$q,textsService){return{createReader:function(conn){return new jskom.Reader($log,$q,textsService,conn);}};}]).factory('membershipListFactory',[function(){return{create:function(){return new jskom.MembershipList();}};}]).factory('membershipListService',['$log','$q',function($log,$q){return{getMembershipList:function(conn){return conn.membershipListHandler.getMembershipList();},refreshUnread:function(conn){return conn.membershipListHandler.refreshUnread();}};}]).factory('membershipListHandlerFactory',['$log','$q','$timeout','membershipsService',function($log,$q,$timeout,membershipsService){return{create:function(conn,membershipList){return new jskom.MembershipListHandler($log,$q,$timeout,membershipsService,conn,membershipList);}};}]);angular.module('jskom.templates',[]).provider('templatePath',function(){var version=null;var urlPrefix='';this.setUrlPrefix=function(newUrlPrefix){urlPrefix=newUrlPrefix;};this.setVersion=function(newVersion){version=newVersion;};var path=function(file){var url=urlPrefix+file;if(version){return url+'?v='+version;}else{return url;}};this.path=path;this.$get=function(){return function(file){return path(file);}};}).filter('jskomTemplate',['templatePath',function(templatePath){return function(filename){return templatePath(filename);};}]);