# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import job_pb2 as job__pb2


class JobServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateJob = channel.unary_unary(
        '/apiserver.v2.JobService/CreateJob',
        request_serializer=job__pb2.CreateJobReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.GetJob = channel.unary_unary(
        '/apiserver.v2.JobService/GetJob',
        request_serializer=job__pb2.GetJobReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.ListJobs = channel.unary_unary(
        '/apiserver.v2.JobService/ListJobs',
        request_serializer=job__pb2.ListJobsReq.SerializeToString,
        response_deserializer=job__pb2.ListJobsRes.FromString,
        )
    self.UpdateJob = channel.unary_unary(
        '/apiserver.v2.JobService/UpdateJob',
        request_serializer=job__pb2.UpdateJobReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.StartJob = channel.unary_unary(
        '/apiserver.v2.JobService/StartJob',
        request_serializer=job__pb2.StartJobReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.StopJob = channel.unary_unary(
        '/apiserver.v2.JobService/StopJob',
        request_serializer=job__pb2.StopJobReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.RemoveJob = channel.unary_unary(
        '/apiserver.v2.JobService/RemoveJob',
        request_serializer=job__pb2.RemoveJobReq.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ReportProgress = channel.unary_unary(
        '/apiserver.v2.JobService/ReportProgress',
        request_serializer=job__pb2.ReportProgressReq.SerializeToString,
        response_deserializer=job__pb2.Job.FromString,
        )
    self.GetLog = channel.unary_unary(
        '/apiserver.v2.JobService/GetLog',
        request_serializer=job__pb2.GetLogReq.SerializeToString,
        response_deserializer=job__pb2.GetLogRes.FromString,
        )


class JobServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateJob(self, request, context):
    """Create a new job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetJob(self, request, context):
    """Get job detail
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListJobs(self, request, context):
    """List jobs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateJob(self, request, context):
    """Update job detail

    fields allowed to be updated:
    - `spec.common.image`
    - `spec.common.command`
    - `spec.common.args`
    - `spec.common.config`, replace all config files
    - `spec.common.env`, replace all existing env vars
    - `spec.common.package`
    - `spec.common.mounting`, replace all existing mountings
    - `spec.instruction.training`, replace whole training spec
    - `spec.instruction.distributed.replicas`, replace all replica specs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartJob(self, request, context):
    """Start a job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopJob(self, request, context):
    """Stop a running job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveJob(self, request, context):
    """Remove a job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReportProgress(self, request, context):
    """Report running progress
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLog(self, request, context):
    """Get container log

    - Request:

    only one of `before` and `after` should be set

    - Get **latest page** of logs: `before.latest = true`
    - Get **previous page** of logs: `before = lastResp.previousRef`
    - Get **first page** of logs: `after.beginning = true`
    - Get **next page** of logs: `after = lastResp.nextRef`

    - Response:

    - `lines` in response could be empty
    - `previousRef` could be used for querying previous page in next request, 
    unless `beginning` is set, which means you hit the beginning of all the logs
    - `nextRef` could be used for querying next page, unless `latest` is set, then you should wait and retry
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateJob': grpc.unary_unary_rpc_method_handler(
          servicer.CreateJob,
          request_deserializer=job__pb2.CreateJobReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'GetJob': grpc.unary_unary_rpc_method_handler(
          servicer.GetJob,
          request_deserializer=job__pb2.GetJobReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'ListJobs': grpc.unary_unary_rpc_method_handler(
          servicer.ListJobs,
          request_deserializer=job__pb2.ListJobsReq.FromString,
          response_serializer=job__pb2.ListJobsRes.SerializeToString,
      ),
      'UpdateJob': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateJob,
          request_deserializer=job__pb2.UpdateJobReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'StartJob': grpc.unary_unary_rpc_method_handler(
          servicer.StartJob,
          request_deserializer=job__pb2.StartJobReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'StopJob': grpc.unary_unary_rpc_method_handler(
          servicer.StopJob,
          request_deserializer=job__pb2.StopJobReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'RemoveJob': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveJob,
          request_deserializer=job__pb2.RemoveJobReq.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ReportProgress': grpc.unary_unary_rpc_method_handler(
          servicer.ReportProgress,
          request_deserializer=job__pb2.ReportProgressReq.FromString,
          response_serializer=job__pb2.Job.SerializeToString,
      ),
      'GetLog': grpc.unary_unary_rpc_method_handler(
          servicer.GetLog,
          request_deserializer=job__pb2.GetLogReq.FromString,
          response_serializer=job__pb2.GetLogRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'apiserver.v2.JobService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
