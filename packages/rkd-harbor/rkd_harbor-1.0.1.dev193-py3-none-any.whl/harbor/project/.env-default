# your project name, will create a namespace in docker with this name
# should contain only a-z, A-Z, 0-9 and _
COMPOSE_PROJECT_NAME=your_project_there

# git deployment specification for applications
GIT_SERVER=github.com
GIT_PROTO=https
GIT_USER=my-deploy-user
GIT_PASSWORD=
GIT_ORG_NAME=my-org-at-git-server

# User login and a group, who owns this repository files and all app files
# Keep empty to chose automatically.
#   Automatic chose priority:
#     - current sudo session user
#     - whoami if not in sudo session
#
APP_USER=
APP_GROUP_ID=

# login:group or id:gid of user who runs by default inside of a container
# All WRITABLE_DIRS will have this user as owner, so the webserver could allow to upload files for example
#
# @override: This value can be overridden by repository configuration
DEFAULT_CONTAINER_USER=82:82

# use for testing to put each of your domain as a subdomain of eg. ".localhost"
DOMAIN_SUFFIX=.localhost
MAIN_DOMAIN=test
#ENFORCE_DEBUG_ENVIRONMENT=1
LETSENCRYPT_EMAIL=somemail@gmail.com

# health checking. Set a code to hide health checks endpoint behind a code (url suffix eg. https://health.domain.org/some-code-here)
HEALTH_CHECK_CODE=some-code-here

# SMTP gateway (passes mails through external gateway)
# your SMTP relay server address
SMARTHOST_ADDRESS=your-server.org
SMARTHOST_PORT=587
SMARTHOST_USER=login@your-server.org
SMARTHOST_PASSWORD=
# forward all e-mails, you can put here eg. allowed recipient domains
SMARTHOST_ALIASES=*

# backups
BACKUPS_URL=https://api.backups.your-project.org
BACKUPS_TOKEN=your-file-repository-token
BACKUPS_PASSPHRASE=with-this-encryption-key-backups-will-be-encrypted
# possible values: aes-128-cbc, aes-256-cbc, see Bahub documentation
BACKUPS_ENCRYPTION_METHOD=aes-128-cbc
BACKUPS_CONTAINER=backup

# backups collections, collection per container/backup point
BACKUPS_PORTAINER_COLLECTION_ID=11111-2222-3333-4444

# watchtower
WATCHTOWER_INTERVAL=10
WATCHTOWER_SLACK_HOOK=...
WATCHTOWER_IDENTIFIER=Watchtower
