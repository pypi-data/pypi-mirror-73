name: Python distributions
on:
    push:
    pull_request:

jobs:
    build-wheels:
        name: Wheel
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest, macos-latest]
                python-version: [3.6, 3.7, 3.8]
                python-arch: [x86, x64]
                include:
                    - python-version: 3.6
                      numpy: "numpy~=1.14"

                    - python-version: 3.7
                      numpy: "numpy~=1.15"

                    - python-version: 3.8
                      numpy: "numpy~=1.17"

                exclude:
                    - os: macos-latest
                      python-arch: x86

        steps:
            - uses: actions/checkout@v2

            - name: Fetch git tags
              run: git fetch origin +refs/tags/*:refs/tags/*

            - name: Set up python ${{ matrix.python-version }} ${{ matrix.python-arch }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
                  architecture: ${{ matrix.python-arch }}

            - name: Install dependencies
              shell: bash
              run: |
                  pip install ${{ matrix.numpy }} toml twine
                  pip install $(python -c "import toml;print(' '.join(toml.load('pyproject.toml')['build-system']['requires']))")

            - name: Build wheel
              run: |
                  python setup.py bdist_wheel
                  python -m twine check dist/*

            - uses: actions/upload-artifact@v1
              with:
                  name: Wheel for ${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.python-arch }}
                  path: dist

            - name: Upload distribution to release
              shell: bash
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                if hub release show ${GITHUB_REF:10}
                then
                    set -x  # for debugging
                    hub release edit -a $(find dist -name "*.whl") -m "" ${GITHUB_REF:10}
                    set +x
                else
                    echo "Release for ${GITHUB_REF:10} not found; skipping wheel upload."
                fi

    build-sdist:
        name: Source Dist
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Fetch git tags
              run: git fetch origin +refs/tags/*:refs/tags/*

            - name: Set up python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Install python dependencies
              shell: bash
              run: |
                pip install toml twine
                pip install $(python -c "import toml;print(' '.join(toml.load('pyproject.toml')['build-system']['requires']))")

            - name: Build source distribution
              run: |
                  python setup.py build_ext sdist
                  python -m twine check dist/*

            - uses: actions/upload-artifact@v1
              with:
                  name: Source distribution
                  path: dist

            - name: Upload distribution to release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  HUB_VERBOSE: 1
              shell: bash
              run: |
                if hub release show ${GITHUB_REF:10}
                then
                    set -x  # for debugging
                    hub release edit -a $(find dist -name "*.tar.gz") -m "" ${GITHUB_REF:10}
                    set +x
                else
                    echo "Release for ${GITHUB_REF:10} not found; skipping sdist upload."
                fi
