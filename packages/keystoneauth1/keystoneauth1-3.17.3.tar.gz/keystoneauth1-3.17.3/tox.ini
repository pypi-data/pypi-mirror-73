[tox]
minversion = 2.5.0
skipsdist = True
envlist = py27,py37,pep8,releasenotes

[testenv]
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
         OS_STDOUT_NOCAPTURE=False
         OS_STDERR_NOCAPTURE=False
deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/requirements.txt
commands = stestr run {posargs}
whitelist_externals =
  bash

[testenv:pep8]
basepython = python3
commands =
  flake8
  # Run security linter
  # B110: except: pass
  # B410: importing etree
  bandit -r keystoneauth1 -x tests -s B110,B410

[testenv:bandit]
basepython = python3
# NOTE(browne): This is required for the integration test job of the bandit
# project. Please do not remove.
commands = bandit -r keystoneauth1 -x tests -s B110,B410

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source keystoneauth1 --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t keystoneauth1/tests {posargs}

[flake8]
# D100: Missing docstring in public module
# D101: Missing docstring in public class
# D102: Missing docstring in public method
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# D203: 1 blank line required before class docstring (deprecated in pep257)
ignore = D100,D101,D102,D103,D104,D203
# H106: Donâ€™t put vim configuration in source files
# H203: Use assertIs(Not)None to check for None
enable-extensions=H106,H203
show-source = True
exclude = .venv,.tox,dist,doc,*egg,build
import-order-style = pep8
application-import-names = keystoneauth1

[testenv:docs]
basepython = python3
deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
    -r{toxinidir}/doc/requirements.txt
commands =
    bash -c "rm -rf doc/build"
    bash -c "rm -rf doc/source/api"
    python setup.py build_sphinx

[testenv:releasenotes]
basepython = python3
deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
    -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[hacking]
local-check-factory = keystoneauth1.hacking.checks.factory

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
