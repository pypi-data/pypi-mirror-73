{% if wallet is defined %}
	<div id="hwi_display_address" class="flex-center flex-column hidden" style="overflow-wrap: break-word;">
		<h2>Confirm Address</h2><br>
		<div>
			Please confirm address matches on your <span id="hwi_device_name">device</span><br><br>
			Expected address:<br>{{ wallet.address }}
		</div>
		<div class="flex-center">
			<img src="/static/img/loader_boxes.svg"/>
		</div>
	</div>

	<script>
		function displayAddressOnDevice() {
			if ('{{ wallet.is_multisig }}' == 'True') {
				showPageOverlay(HWI_POPUPS.SELECT)
				for (let deviceType of HWI_DEVICES_TYPES) {
					document.getElementById("hwi_select_device__" + deviceType).style.display = 'none';
				}
				{% for device in wallet.devices %}
					{% if device.supports_hwi_multisig_display_address %}
						document.getElementById("hwi_select_device__{{ device.device_type }}").style.display = 'block';
					{% endif %}
				{% endfor %}
			} else {
				beginDetectWallet("{{ wallet.devices[0].device_type }}");
			}
			document.getElementById("hwi_unlocked__submit").addEventListener("click", async function(e) {
				e.preventDefault();
				document.getElementById("hwi_device_name").textContent = hwiTypeToDisplayName(hwiCurrentWallet.type);
				showPageOverlay(HWI_POPUPS.DISPLAY_ADDRESS);

				let result = await hwiSendCommand('display_address', {
					device_type: hwiCurrentWallet.type,
					path: hwiCurrentWallet.path,
					passphrase: hwiWalletPassphrase,
					descriptor: {{ wallet.cli.getaddressinfo(wallet.address)['desc']|tojson }},
				});

				if (result.success) {
					if ("{{ wallet.address }}" != result.data &&
						(("{{ specter.chain }}" != "regtest" || !result.data.startsWith("tb")) ||
						"{{ wallet.address }}".slice(0, -6) != "bcrt" + result.data.slice(2, -6))
					) {
						showError("Addresses did not match! Be careful! Please contact support and beware of using the displayed address!");
					}
				}
				hidePageOverlay();
			});
		}
	</script>
{% endif %}
