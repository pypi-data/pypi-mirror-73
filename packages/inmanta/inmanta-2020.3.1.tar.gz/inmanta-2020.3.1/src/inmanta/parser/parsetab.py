
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,leftORleftANDleftCMP_OPrightNOTleftINrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : emptytop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import empty : import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | for\n                | ifstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF expression \':\' blockif : IF expression \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n        | attr_base_type \'?\'attr_type : attr_type_opt\n        | attr_type_multi\n        | attr_base_typeattr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n        | IMPLEMENT class_ref USING implement_ns_list mlsimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n        | IMPLEMENT class_ref USING implement_ns_list WHEN expression mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relation_def mlsrelation : relation_defrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'  expression : boolean_expression\n            | constant\n            | function_call\n            | var_ref\n            | constructor\n            | list_def\n            | map_def\n            | map_lookup\n            | index_lookup  expression : \'(\' expression \')\'  boolean_expression : expression CMP_OP expression\n            | expression IN expression\n            | expression AND expression\n            | expression OR expression  boolean_expression : NOT expression  boolean_expression : var_ref \'.\' ID IS DEFINED boolean_expression : ID IS DEFINED  operand : expression  map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' function_param_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n        | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n        pair_list_empty : empty map_def : \'{\' pair_list \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant : mls  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n        param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n            | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n        function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n            | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list :var_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,36,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[-12,0,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-1,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'MLS_END':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,85,87,101,105,106,114,115,116,119,120,121,122,124,126,129,137,140,143,155,157,158,159,163,164,167,168,173,174,176,177,179,183,184,185,186,187,189,190,194,195,196,197,200,202,203,211,214,215,216,217,220,229,230,232,237,240,241,242,243,246,247,248,249,253,256,257,258,261,262,263,264,266,268,271,274,278,282,283,284,285,288,289,296,300,301,302,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,13,-146,-153,13,-15,-16,-17,-18,-19,13,13,-157,-68,-79,-13,13,13,13,-83,-84,-85,-86,-87,-88,-89,-90,-91,13,13,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,13,13,13,13,-147,-152,-100,-22,-23,13,13,13,13,13,-97,13,13,-27,-33,-28,13,-54,-55,13,-104,13,13,-14,-105,13,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,13,-111,13,-81,-34,-32,13,13,-57,-58,13,-74,-61,13,-82,-64,-103,-101,-113,-112,-102,13,-31,13,-29,-30,13,-56,-75,-77,-71,-73,-63,-24,-98,-80,13,-59,-60,13,-76,-62,-26,-67,13,-70,-72,]),'MLS':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,85,87,101,105,106,114,115,116,119,120,121,122,124,126,129,137,140,143,155,157,158,159,163,164,167,168,173,174,176,177,179,183,184,185,186,187,189,190,194,195,196,197,200,202,203,211,214,215,216,217,220,229,230,232,237,240,241,242,243,246,247,248,249,253,256,257,258,261,262,263,264,266,268,271,274,278,282,283,284,285,288,289,296,300,301,302,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,14,-146,-153,14,-15,-16,-17,-18,-19,14,14,-157,-68,-79,-13,14,14,14,-83,-84,-85,-86,-87,-88,-89,-90,-91,14,14,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,14,14,14,14,-147,-152,-100,-22,-23,14,14,14,14,14,-97,14,14,-27,-33,-28,14,-54,-55,14,-104,14,14,-14,-105,14,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,14,-111,14,-81,-34,-32,14,14,-57,-58,14,-74,-61,14,-82,-64,-103,-101,-113,-112,-102,14,-31,14,-29,-30,14,-56,-75,-77,-71,-73,-63,-24,-98,-80,14,-59,-60,14,-76,-62,-26,-67,14,-70,-72,]),'ENTITY':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'IMPLEMENT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'IMPLEMENTATION':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'INDEX':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'IMPORT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'CID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,33,34,37,47,48,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,86,88,100,101,105,106,114,115,116,118,119,120,121,122,124,126,128,129,132,137,139,140,143,155,157,158,159,163,164,167,168,173,174,176,177,179,180,183,184,185,186,187,189,190,194,195,196,197,200,202,203,212,213,215,216,217,219,220,223,224,229,230,231,232,237,240,241,242,243,244,246,247,248,253,256,257,258,261,262,263,264,265,266,268,270,271,274,282,283,284,285,288,289,296,301,302,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,38,-146,-153,16,-69,-15,-16,-17,-18,-19,-78,16,16,84,-157,-68,-79,-13,105,16,16,16,-83,-84,-85,-86,-87,-88,-89,-90,-91,16,16,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,16,16,16,16,16,-147,-152,-100,-22,-23,16,16,16,16,16,16,-97,105,16,-140,16,16,-27,-33,-28,-12,-54,-55,16,-104,16,16,-14,-105,16,-25,-65,16,-93,-94,-95,-96,-143,-92,-99,-106,16,-111,16,-81,-34,-32,16,16,-57,-58,16,16,-74,16,16,-61,16,16,-82,-64,-103,-101,-113,-112,-139,-102,16,-31,-29,-30,-12,-56,-75,-77,-71,-73,16,-63,-24,16,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,45,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,118,126,140,143,155,157,158,159,164,173,174,177,179,180,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,230,231,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,265,266,268,270,271,274,282,283,284,285,288,289,296,301,302,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,100,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,21,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,21,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,21,21,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,21,-63,-24,21,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,118,126,140,143,155,157,158,159,164,173,174,177,179,180,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,230,231,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,265,266,268,270,271,274,282,283,284,285,288,289,296,301,302,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,33,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,33,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,33,33,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,33,-63,-24,33,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'TYPEDEF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,105,106,114,115,116,126,140,143,155,157,158,159,164,173,174,177,179,183,184,185,186,187,189,190,194,196,200,202,203,215,216,220,229,232,237,240,241,242,243,246,248,253,256,257,258,261,262,263,264,266,268,271,274,282,283,284,285,288,289,296,301,302,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,-146,-153,-69,-15,-16,-17,-18,-19,-78,-157,-68,-79,-13,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-147,-152,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-65,-93,-94,-95,-96,-143,-92,-99,-106,-111,-81,-34,-32,-57,-58,-74,-61,-82,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-75,-77,-71,-73,-63,-24,-98,-80,-59,-60,-66,-76,-62,-26,-67,-70,-72,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,43,44,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,85,86,87,88,89,100,101,102,103,104,105,106,114,115,116,118,119,120,121,122,123,124,126,128,129,130,132,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,157,158,159,163,164,166,167,168,173,174,176,177,179,180,183,184,185,186,187,189,190,194,195,196,197,200,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,223,224,229,230,231,232,233,237,240,241,242,243,244,246,247,248,251,252,253,256,257,258,259,261,262,263,264,265,266,268,270,271,274,275,276,277,279,280,282,283,284,285,286,287,288,289,294,295,296,299,301,302,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-156,39,-146,-153,17,42,45,46,-69,-15,-16,-17,-18,-19,-78,17,17,68,83,-157,92,97,-68,-79,-13,106,113,68,68,117,-83,-84,-85,-86,-87,-88,-89,-90,-91,68,68,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,68,17,17,17,17,17,17,68,172,173,106,-147,-152,-100,-22,-23,17,68,68,68,68,187,68,-97,106,113,97,-140,68,17,17,-27,17,17,-33,-36,205,206,-41,-42,-43,-37,-28,-12,-54,-55,68,-104,97,68,68,-14,-105,113,-25,-65,17,-93,-94,-95,-96,-143,-92,-99,-106,68,-111,68,-81,17,-34,-32,-35,-44,-48,251,-39,-40,17,17,17,17,-57,-58,68,17,17,-74,17,17,-61,17,17,-82,172,-64,-103,-101,-113,-112,-139,-102,68,-31,-51,-38,-29,-30,-12,-56,284,-75,-77,-71,-73,17,-63,-24,17,-98,-80,-45,-46,-47,-49,-50,-59,-60,-66,-76,297,298,-62,-26,-52,-53,-67,-122,-70,-72,]),':':([13,16,17,35,37,38,39,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,91,105,106,114,117,126,134,151,152,153,154,156,161,164,169,170,174,183,184,185,186,187,189,190,194,196,236,240,241,242,243,246,254,255,271,],[-156,-146,-153,-142,-157,85,87,118,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,162,-147,-152,-100,-143,-97,197,211,-150,-151,-145,214,221,-104,230,231,-105,-93,-94,-95,-96,-143,-92,-99,-106,-111,270,-103,-101,-113,-112,-102,-148,-149,-98,]),'CMP_OP':([13,37,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,106,113,114,125,126,164,174,183,184,185,186,187,189,190,194,196,240,241,242,243,246,257,271,274,],[-156,-157,119,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-152,-153,119,119,-97,-104,-105,-93,-94,119,119,-143,-92,-99,-106,-111,-103,-101,-113,-112,-102,119,-98,119,]),'IN':([13,37,46,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,106,113,114,125,126,164,174,183,184,185,186,187,189,190,194,196,240,241,242,243,246,257,271,274,],[-156,-157,101,120,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-152,-153,120,120,120,-104,-105,120,-94,120,120,-143,-92,-99,-106,-111,-103,-101,-113,-112,-102,120,-98,120,]),'AND':([13,37,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,106,113,114,125,126,164,174,183,184,185,186,187,189,190,194,196,240,241,242,243,246,257,271,274,],[-156,-157,121,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-152,-153,121,121,-97,-104,-105,-93,-94,-95,121,-143,-92,-99,-106,-111,-103,-101,-113,-112,-102,121,-98,121,]),'OR':([13,37,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,106,113,114,125,126,164,174,183,184,185,186,187,189,190,194,196,240,241,242,243,246,257,271,274,],[-156,-157,122,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-152,-153,122,122,-97,-104,-105,-93,-94,-95,-96,-143,-92,-99,-106,-111,-103,-101,-113,-112,-102,122,-98,122,]),',':([13,16,17,35,37,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,95,98,105,106,109,111,112,113,114,117,126,132,152,153,154,157,158,159,164,172,174,183,184,185,186,187,189,190,194,196,227,228,240,241,242,243,245,246,258,271,293,],[-156,-146,-153,-142,-157,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,166,-128,-147,-152,176,-133,-134,-153,-100,-143,-97,195,212,213,-145,218,-54,-55,-104,233,-105,-93,-94,-95,-96,-143,-92,-99,-106,-111,-127,-126,-103,-101,-113,-112,272,-102,218,-98,300,]),')':([13,37,44,52,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,93,94,95,96,98,106,107,108,109,110,111,112,113,114,125,126,164,165,166,171,172,174,175,176,183,184,185,186,187,189,190,194,196,225,226,227,228,234,235,240,241,242,243,246,269,271,],[-156,-157,-12,-12,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,164,-129,-12,-130,-128,-152,174,-135,-12,-136,-133,-134,-153,-100,189,-97,-104,-12,-12,232,-155,-105,-12,-12,-93,-94,-95,-96,-143,-92,-99,-106,-111,-131,-132,-127,-126,-137,-138,-103,-101,-113,-112,-102,-154,-98,]),'ELSE':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,106,114,115,116,126,164,174,177,178,179,180,183,184,185,186,187,189,190,194,196,237,238,240,241,242,243,246,268,271,289,],[-156,-15,-16,-17,-18,-19,-157,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-152,-100,-22,-23,-97,-104,-105,-25,236,-65,-21,-93,-94,-95,-96,-143,-92,-99,-106,-111,-64,-20,-103,-101,-113,-112,-102,-24,-98,-26,]),'END':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,85,87,106,114,115,116,118,126,141,142,144,164,174,177,178,179,180,183,184,185,186,187,189,190,194,196,201,204,205,206,211,214,230,231,237,238,240,241,242,243,246,251,265,267,268,270,271,275,276,277,279,280,289,294,295,299,],[-156,-15,-16,-17,-18,-19,-157,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,143,143,-152,-100,-22,-23,179,-97,202,203,-36,-104,-105,-25,237,-65,-21,-93,-94,-95,-96,-143,-92,-99,-106,-111,248,-35,-44,-48,143,143,179,179,-64,-20,-103,-101,-113,-112,-102,-51,179,237,-24,179,-98,-45,-46,-47,-49,-50,-26,-52,-53,-122,]),']':([13,37,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,80,94,95,96,98,106,113,114,126,129,130,131,132,161,164,165,166,174,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,210,221,222,225,226,227,228,240,241,242,243,244,246,260,271,278,292,293,300,303,],[-156,-157,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-141,-129,-12,-130,-128,-152,-153,-100,-97,-12,-12,194,-140,220,-104,-12,-12,-105,-93,-94,-95,-96,-143,240,-92,-99,241,242,243,-106,-141,-111,246,252,261,262,-131,-132,-127,-126,-103,-101,-113,-112,-139,-102,285,-98,-124,299,-123,-124,-125,]),'}':([13,37,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,81,106,114,126,133,135,136,164,174,183,184,185,186,187,189,190,194,196,240,241,242,243,245,246,271,272,273,290,291,],[-156,-157,-83,-84,-85,-86,-87,-88,-89,-90,-91,-153,-114,-115,-116,-117,-118,-119,-120,-121,-145,-142,-12,-152,-100,-97,196,-110,-109,-104,-105,-93,-94,-95,-96,-143,-92,-99,-106,-111,-103,-101,-113,-112,-12,-102,-98,-12,-12,-107,-108,]),'DICT':([13,37,69,70,71,72,73,74,75,76,85,87,141,142,144,196,201,204,205,206,211,214,251,275,276,277,279,280,294,295,299,],[-156,-157,-114,-115,-116,-117,-118,-119,-120,-121,146,146,146,146,-36,-111,146,-35,-44,-48,146,146,-51,-45,-46,-47,-49,-50,-52,-53,-122,]),'.':([16,17,19,31,32,35,60,68,77,78,105,106,113,117,153,154,182,187,263,264,],[-146,-153,43,-145,55,-142,123,-153,-145,-142,-147,-152,-153,-143,55,-145,-145,-143,286,287,]),'(':([16,17,19,31,33,49,52,53,54,66,67,68,77,79,80,101,105,106,113,119,120,121,122,124,129,137,163,167,168,176,181,182,195,197,217,220,247,261,262,285,],[-146,-153,44,52,66,102,66,66,66,66,66,-153,52,44,66,66,-147,-152,-153,66,66,66,66,66,66,66,66,66,66,66,44,52,66,66,66,-74,66,-75,-77,-76,]),'USING':([16,40,105,],[-146,89,-147,]),'[':([16,17,33,42,52,53,54,64,66,67,68,77,78,79,80,82,92,101,105,106,113,119,120,121,122,124,129,137,149,150,160,163,167,168,176,187,195,197,217,220,240,241,246,247,249,261,262,285,297,298,],[-146,-153,80,91,80,80,80,124,80,80,-153,-144,129,130,80,137,91,80,-147,-152,-153,80,80,80,80,80,80,80,210,-37,91,80,80,80,80,-143,80,80,80,-74,-103,-101,-102,80,278,-75,-77,-76,91,91,]),'SEP':([17,31,41,50,68,77,106,113,150,154,158,182,199,],[-153,51,51,104,-153,128,-152,-153,104,51,104,51,104,]),'=':([17,31,32,35,97,106,113,117,182,205,206,251,],[-153,-145,53,-142,167,-152,167,-143,-145,249,250,281,]),'PEQ':([17,31,32,35,106,117,182,],[-153,-145,54,-142,-152,-143,-145,]),'AS':([17,50,83,84,106,],[-153,103,138,139,-152,]),'?':([17,106,146,148,149,150,252,],[-153,-152,207,208,209,-37,-38,]),'WHEN':([17,106,157,158,159,258,],[-153,-152,217,-54,-55,-56,]),'MATCHING':([17,106,199,],[-153,-152,247,]),'NOT':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,261,262,285,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-74,67,-75,-77,-76,]),'INT':([33,52,53,54,66,67,80,91,101,119,120,121,122,124,129,137,162,163,167,168,176,195,197,217,220,221,247,249,261,262,278,285,300,],[69,69,69,69,69,69,69,161,69,69,69,69,69,69,69,69,222,69,69,69,69,69,69,69,-74,260,69,69,-75,-77,69,-76,69,]),'FLOAT':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,261,262,278,285,300,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-74,70,70,-75,-77,70,-76,70,]),'NULL':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,250,261,262,278,281,285,300,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-74,71,71,280,-75,-77,71,295,-76,71,]),'REGEX':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,261,262,278,285,300,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-74,72,72,-75,-77,72,-76,72,]),'TRUE':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,261,262,278,285,300,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-74,73,73,-75,-77,73,-76,73,]),'FALSE':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,261,262,278,285,300,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-74,74,74,-75,-77,74,-76,74,]),'STRING':([33,52,53,54,66,67,80,81,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,249,261,262,272,278,285,300,],[75,75,75,75,75,75,75,134,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-74,75,75,-75,-77,134,75,-76,75,]),'{':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,220,247,250,261,262,281,285,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-74,81,81,-75,-77,81,-76,]),'EXTENDS':([38,39,],[86,88,]),'*':([44,52,99,129,130,166,176,],[99,99,168,99,99,99,99,]),'IS':([68,113,187,],[127,127,239,]),'PARENTS':([89,218,],[159,159,]),'REL':([90,163,220,261,262,285,],[160,223,-74,-75,-77,-76,]),'DEFINED':([127,239,],[190,271,]),'UNDEF':([249,],[277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,36,]),'top_stmt':([0,2,],[2,2,]),'empty':([0,2,44,52,81,95,109,129,130,157,165,166,175,176,245,257,272,273,],[3,3,96,110,135,165,175,96,96,215,96,96,110,110,273,282,135,135,]),'mls':([0,2,14,22,28,33,52,53,54,66,67,80,85,87,101,119,120,121,122,124,129,137,157,163,167,168,176,195,197,211,214,217,230,247,249,257,278,284,300,],[4,4,37,47,48,76,76,76,76,76,76,76,141,141,76,76,76,76,76,76,76,76,216,76,76,76,76,76,76,141,141,76,265,76,76,283,76,296,76,]),'entity_def':([0,2,],[5,5,]),'implement_def':([0,2,],[6,6,]),'implementation_def':([0,2,],[7,7,]),'relation':([0,2,],[8,8,]),'statement':([0,2,118,180,230,231,265,270,],[9,9,180,180,180,180,180,180,]),'typedef':([0,2,],[10,10,]),'index':([0,2,],[11,11,]),'import':([0,2,],[12,12,]),'class_ref':([0,2,18,29,33,52,53,54,66,67,80,86,88,100,101,118,119,120,121,122,124,129,137,139,163,167,168,176,180,195,197,212,213,217,219,223,224,230,231,247,265,270,],[19,19,40,49,79,79,79,79,79,79,79,152,152,169,79,181,79,79,79,79,79,79,79,181,79,79,79,79,181,79,79,152,152,79,259,263,264,181,181,79,181,181,]),'relation_def':([0,2,],[22,22,]),'assign':([0,2,118,180,230,231,265,270,],[23,23,23,23,23,23,23,23,]),'constructor':([0,2,33,52,53,54,66,67,80,101,118,119,120,121,122,124,129,137,139,163,167,168,176,180,195,197,217,230,231,247,265,270,],[24,24,61,61,61,61,61,61,61,61,24,61,61,61,61,61,61,61,200,61,61,61,61,24,61,61,61,24,24,61,24,24,]),'function_call':([0,2,33,52,53,54,66,67,80,101,118,119,120,121,122,124,129,137,163,167,168,176,180,195,197,217,230,231,247,265,270,],[25,25,59,59,59,59,59,59,59,59,25,59,59,59,59,59,59,59,59,59,59,59,25,59,59,59,25,25,59,25,25,]),'for':([0,2,118,180,230,231,265,270,],[26,26,26,26,26,26,26,26,]),'if':([0,2,118,180,230,231,265,270,],[27,27,27,27,27,27,27,27,]),'typedef_inner':([0,2,],[28,28,]),'ns_ref':([0,2,18,29,30,33,52,53,54,66,67,80,85,86,87,88,89,100,101,118,119,120,121,122,124,129,137,138,139,141,142,163,167,168,176,180,195,197,201,211,212,213,214,217,218,219,223,224,230,231,247,265,270,],[31,31,41,41,50,77,77,77,77,77,77,77,150,154,150,154,158,41,77,182,77,77,77,77,77,77,77,199,41,150,150,77,77,77,77,182,77,77,150,150,154,154,150,77,158,41,41,41,182,182,77,182,182,]),'var_ref':([0,2,33,52,53,54,66,67,80,86,88,101,118,119,120,121,122,124,129,137,163,167,168,176,180,195,197,212,213,217,230,231,247,265,270,],[32,32,60,60,60,60,60,60,60,153,153,60,32,60,60,60,60,60,60,60,60,60,60,60,32,60,60,153,153,60,32,32,60,32,32,]),'attr_ref':([0,2,33,52,53,54,66,67,80,86,88,101,118,119,120,121,122,124,129,137,163,167,168,176,180,195,197,212,213,217,230,231,247,265,270,],[35,35,78,78,78,78,78,78,78,35,35,78,35,78,78,78,78,78,78,78,78,78,78,78,35,78,78,35,35,78,35,35,78,35,35,]),'expression':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[56,114,114,114,125,126,114,114,183,184,185,186,114,114,114,114,114,114,114,114,114,257,274,]),'boolean_expression':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'constant':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,249,278,300,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,275,293,293,]),'list_def':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'map_def':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,250,281,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,279,294,]),'map_lookup':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'index_lookup':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'local_var':([33,52,53,54,66,67,80,101,119,120,121,122,124,129,137,163,167,168,176,195,197,217,247,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'multi':([42,92,160,297,298,],[90,163,219,301,302,]),'param_list':([44,129,130,166,],[93,192,193,226,]),'param_list_empty':([44,129,130,165,166,],[94,94,94,225,94,]),'param_list_element':([44,52,129,130,166,176,],[95,111,95,95,95,111,]),'wrapped_kwargs':([44,52,129,130,166,176,],[98,98,98,98,98,98,]),'function_param_list':([52,176,],[107,235,]),'function_param_list_empty':([52,175,176,],[108,234,108,]),'function_param_list_element':([52,176,],[109,109,]),'operand':([52,53,54,80,101,124,129,137,163,167,168,176,195,197,],[112,115,116,132,170,188,191,198,132,227,228,112,132,245,]),'operand_list':([80,163,195,],[131,224,244,]),'pair_list':([81,272,],[133,290,]),'pair_list_empty':([81,272,273,],[136,136,291,]),'entity_body_outer':([85,87,211,214,],[140,155,253,256,]),'entity_body':([85,87,141,211,214,],[142,142,201,142,142,]),'attr':([85,87,141,142,201,211,214,],[144,144,144,204,204,144,144,]),'attr_type':([85,87,141,142,201,211,214,],[145,145,145,145,145,145,145,]),'attr_type_opt':([85,87,141,142,201,211,214,],[147,147,147,147,147,147,147,]),'attr_type_multi':([85,87,141,142,201,211,214,],[148,148,148,148,148,148,148,]),'attr_base_type':([85,87,141,142,201,211,214,],[149,149,149,149,149,149,149,]),'class_ref_list':([86,88,212,213,],[151,156,254,255,]),'implement_ns_list':([89,218,],[157,258,]),'id_list':([102,233,],[171,269,]),'block':([118,230,231,265,270,],[177,266,268,288,289,]),'stmt_list':([118,180,230,231,265,270,],[178,238,267,267,267,267,]),'implementation':([169,],[229,]),'constant_list':([249,],[276,]),'constants':([278,300,],[292,303,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',113),
  ('main -> empty','main',1,'p_main_term','plyInmantaParser.py',120),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',125),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',126),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',127),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',128),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',129),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',130),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',131),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',132),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',133),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',138),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',148),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',154),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',165),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',166),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',167),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',168),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',169),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',183),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',190),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',195),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',201),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',207),
  ('if -> IF expression : block','if',4,'p_if','plyInmantaParser.py',213),
  ('if -> IF expression : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',219),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',230),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',236),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',241),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',247),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',252),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',257),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',262),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',267),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',272),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',278),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',283),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',288),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',294),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',295),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',301),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',302),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',303),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',308),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',314),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',315),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',321),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',327),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',333),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',339),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',344),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',350),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',356),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',363),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',368),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',373),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',378),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list mls','implement_def',5,'p_implement','plyInmantaParser.py',379),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',386),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression mls','implement_def',7,'p_implement_when','plyInmantaParser.py',387),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',397),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',409),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',414),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',419),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',424),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',430),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',441),
  ('relation -> relation_def mls','relation',2,'p_relation_outer_comment','plyInmantaParser.py',476),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',483),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',488),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',494),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',500),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',506),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',512),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',517),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',522),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',527),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',535),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',540),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',547),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',553),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',562),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',572),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',573),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',574),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',575),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',576),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',577),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',578),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',579),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',580),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',585),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',590),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',591),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',592),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',593),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',600),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',606),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',612),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',618),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',623),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',624),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',625),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',630),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',635),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',641),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',647),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',648),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',654),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',655),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',660),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',666),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',672),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',683),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',684),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',691),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',698),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',705),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',712),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',719),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',725),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',765),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',771),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',776),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',781),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',787),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',792),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',798),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',804),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',805),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',811),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',812),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',827),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',834),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',840),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',841),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',847),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',848),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',866),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',872),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',877),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',882),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',887),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',893),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',899),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',905),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',916),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',928),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',934),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',939),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',944),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',950),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',956),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',961),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',967),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',972),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',977),
]
