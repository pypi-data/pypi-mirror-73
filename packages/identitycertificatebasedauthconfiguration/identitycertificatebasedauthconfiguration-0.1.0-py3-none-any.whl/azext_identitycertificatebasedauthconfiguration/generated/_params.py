# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azext_identitycertificatebasedauthconfiguration.action import AddCertificateAuthorities


def load_arguments(self, _):

    with self.argument_context('identitycertificatebasedauthconfiguration certificate-based-auth-configuration-certificate-based-auth-configuration update') as c:
        c.argument('certificate_based_auth_configuration_id', help='key: certificateBasedAuthConfiguration-id of '
                   'certificateBasedAuthConfiguration')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('certificate_authorities', action=AddCertificateAuthorities, nargs='*', help='Collection of '
                   'certificate authorities which creates a trusted certificate chain.')

    with self.argument_context('identitycertificatebasedauthconfiguration certificate-based-auth-configuration-certificate-based-auth-configuration delete') as c:
        c.argument('certificate_based_auth_configuration_id', help='key: certificateBasedAuthConfiguration-id of '
                   'certificateBasedAuthConfiguration')
        c.argument('if_match', help='ETag')

    with self.argument_context('identitycertificatebasedauthconfiguration certificate-based-auth-configuration-certificate-based-auth-configuration create-certificate-based-auth-configuration') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('certificate_authorities', action=AddCertificateAuthorities, nargs='*', help='Collection of '
                   'certificate authorities which creates a trusted certificate chain.')

    with self.argument_context('identitycertificatebasedauthconfiguration certificate-based-auth-configuration-certificate-based-auth-configuration get-certificate-based-auth-configuration') as c:
        c.argument('certificate_based_auth_configuration_id', help='key: certificateBasedAuthConfiguration-id of '
                   'certificateBasedAuthConfiguration')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('identitycertificatebasedauthconfiguration certificate-based-auth-configuration-certificate-based-auth-configuration list-certificate-based-auth-configuration') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
