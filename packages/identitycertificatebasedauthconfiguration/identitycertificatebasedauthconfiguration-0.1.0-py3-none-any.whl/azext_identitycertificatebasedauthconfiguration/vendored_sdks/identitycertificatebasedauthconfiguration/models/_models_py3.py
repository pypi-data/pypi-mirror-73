# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import List, Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class CollectionOfCertificateBasedAuthConfiguration(msrest.serialization.Model):
    """Collection of certificateBasedAuthConfiguration.

    :param value:
    :type value:
     list[~identity_certificate_based_auth_configuration.models.MicrosoftGraphCertificateBasedAuthConfiguration]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphCertificateBasedAuthConfiguration]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphCertificateBasedAuthConfiguration"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfCertificateBasedAuthConfiguration, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class MicrosoftGraphCertificateAuthority(msrest.serialization.Model):
    """certificateAuthority.

    :param is_root_authority: Required. true if the trusted certificate is a root authority, false
     if the trusted certificate is an intermediate authority.
    :type is_root_authority: bool
    :param certificate_revocation_list_url: The URL of the certificate revocation list.
    :type certificate_revocation_list_url: str
    :param delta_certificate_revocation_list_url: The URL contains the list of all revoked
     certificates since the last time a full certificate revocaton list was created.
    :type delta_certificate_revocation_list_url: str
    :param certificate: Required. The base64 encoded string representing the public certificate.
    :type certificate: bytes
    :param issuer: The issuer of the certificate, calculated from the certificate value. Read-only.
    :type issuer: str
    :param issuer_ski: The subject key identifier of the certificate, calculated from the
     certificate value. Read-only.
    :type issuer_ski: str
    """

    _attribute_map = {
        'is_root_authority': {'key': 'isRootAuthority', 'type': 'bool'},
        'certificate_revocation_list_url': {'key': 'certificateRevocationListUrl', 'type': 'str'},
        'delta_certificate_revocation_list_url': {'key': 'deltaCertificateRevocationListUrl', 'type': 'str'},
        'certificate': {'key': 'certificate', 'type': 'base64'},
        'issuer': {'key': 'issuer', 'type': 'str'},
        'issuer_ski': {'key': 'issuerSki', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        is_root_authority: Optional[bool] = None,
        certificate_revocation_list_url: Optional[str] = None,
        delta_certificate_revocation_list_url: Optional[str] = None,
        certificate: Optional[bytes] = None,
        issuer: Optional[str] = None,
        issuer_ski: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphCertificateAuthority, self).__init__(**kwargs)
        self.is_root_authority = is_root_authority
        self.certificate_revocation_list_url = certificate_revocation_list_url
        self.delta_certificate_revocation_list_url = delta_certificate_revocation_list_url
        self.certificate = certificate
        self.issuer = issuer
        self.issuer_ski = issuer_ski


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.id = id


class MicrosoftGraphCertificateBasedAuthConfiguration(MicrosoftGraphEntity):
    """certificateBasedAuthConfiguration.

    :param id: Read-only.
    :type id: str
    :param certificate_authorities: Collection of certificate authorities which creates a trusted
     certificate chain.
    :type certificate_authorities:
     list[~identity_certificate_based_auth_configuration.models.MicrosoftGraphCertificateAuthority]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'certificate_authorities': {'key': 'certificateAuthorities', 'type': '[MicrosoftGraphCertificateAuthority]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        certificate_authorities: Optional[List["MicrosoftGraphCertificateAuthority"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphCertificateBasedAuthConfiguration, self).__init__(id=id, **kwargs)
        self.certificate_authorities = certificate_authorities


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param error: Required.
    :type error: ~identity_certificate_based_auth_configuration.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        *,
        error: "OdataErrorMain",
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.error = error


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~identity_certificate_based_auth_configuration.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: object
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        details: Optional[List["OdataErrorDetail"]] = None,
        innererror: Optional[object] = None,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.innererror = innererror
