# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import cmp_ipproxy_lib.grpc_generate.AgentFeedBack_pb2 as AgentFeedBack__pb2


class AgentFeedbackServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.feedback = channel.unary_unary(
                '/grpc.cmp.proxy.api.agent.AgentFeedbackService/feedback',
                request_serializer=AgentFeedBack__pb2.FeedbackLog.SerializeToString,
                response_deserializer=AgentFeedBack__pb2.FeedbackReply.FromString,
                )


class AgentFeedbackServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def feedback(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentFeedbackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'feedback': grpc.unary_unary_rpc_method_handler(
                    servicer.feedback,
                    request_deserializer=AgentFeedBack__pb2.FeedbackLog.FromString,
                    response_serializer=AgentFeedBack__pb2.FeedbackReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.cmp.proxy.api.agent.AgentFeedbackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgentFeedbackService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def feedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.cmp.proxy.api.agent.AgentFeedbackService/feedback',
            AgentFeedBack__pb2.FeedbackLog.SerializeToString,
            AgentFeedBack__pb2.FeedbackReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
