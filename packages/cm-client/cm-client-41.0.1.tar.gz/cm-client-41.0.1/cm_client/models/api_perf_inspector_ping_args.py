# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v41</h1>       <p>Introduced in Cloudera Manager 7.1.1</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApiPerfInspectorPingArgs(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ping_timeout_secs': 'float',
        'ping_count': 'float',
        'ping_packet_size_bytes': 'float'
    }

    attribute_map = {
        'ping_timeout_secs': 'pingTimeoutSecs',
        'ping_count': 'pingCount',
        'ping_packet_size_bytes': 'pingPacketSizeBytes'
    }

    def __init__(self, ping_timeout_secs=None, ping_count=None, ping_packet_size_bytes=None):
        """
        ApiPerfInspectorPingArgs - a model defined in Swagger
        """

        self._ping_timeout_secs = None
        self._ping_count = None
        self._ping_packet_size_bytes = None

        if ping_timeout_secs is not None:
          self.ping_timeout_secs = ping_timeout_secs
        if ping_count is not None:
          self.ping_count = ping_count
        if ping_packet_size_bytes is not None:
          self.ping_packet_size_bytes = ping_packet_size_bytes

    @property
    def ping_timeout_secs(self):
        """
        Gets the ping_timeout_secs of this ApiPerfInspectorPingArgs.
        Timeout in seconds for the ping request to each target host. If not specified, defaults to 10 seconds. Must be a value between 1 and 3600 seconds, inclusive.

        :return: The ping_timeout_secs of this ApiPerfInspectorPingArgs.
        :rtype: float
        """
        return self._ping_timeout_secs

    @ping_timeout_secs.setter
    def ping_timeout_secs(self, ping_timeout_secs):
        """
        Sets the ping_timeout_secs of this ApiPerfInspectorPingArgs.
        Timeout in seconds for the ping request to each target host. If not specified, defaults to 10 seconds. Must be a value between 1 and 3600 seconds, inclusive.

        :param ping_timeout_secs: The ping_timeout_secs of this ApiPerfInspectorPingArgs.
        :type: float
        """

        self._ping_timeout_secs = ping_timeout_secs

    @property
    def ping_count(self):
        """
        Gets the ping_count of this ApiPerfInspectorPingArgs.
        Number of iterations of the ping request to each target host. If not specified, defaults to 10 count.

        :return: The ping_count of this ApiPerfInspectorPingArgs.
        :rtype: float
        """
        return self._ping_count

    @ping_count.setter
    def ping_count(self, ping_count):
        """
        Sets the ping_count of this ApiPerfInspectorPingArgs.
        Number of iterations of the ping request to each target host. If not specified, defaults to 10 count.

        :param ping_count: The ping_count of this ApiPerfInspectorPingArgs.
        :type: float
        """

        self._ping_count = ping_count

    @property
    def ping_packet_size_bytes(self):
        """
        Gets the ping_packet_size_bytes of this ApiPerfInspectorPingArgs.
        Packet size in bytes for each ping request. If not specified, defaults to 56 bytes. Must be a value between 1 and 65507 bytes, inclusive.

        :return: The ping_packet_size_bytes of this ApiPerfInspectorPingArgs.
        :rtype: float
        """
        return self._ping_packet_size_bytes

    @ping_packet_size_bytes.setter
    def ping_packet_size_bytes(self, ping_packet_size_bytes):
        """
        Sets the ping_packet_size_bytes of this ApiPerfInspectorPingArgs.
        Packet size in bytes for each ping request. If not specified, defaults to 56 bytes. Must be a value between 1 and 65507 bytes, inclusive.

        :param ping_packet_size_bytes: The ping_packet_size_bytes of this ApiPerfInspectorPingArgs.
        :type: float
        """

        self._ping_packet_size_bytes = ping_packet_size_bytes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApiPerfInspectorPingArgs):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
