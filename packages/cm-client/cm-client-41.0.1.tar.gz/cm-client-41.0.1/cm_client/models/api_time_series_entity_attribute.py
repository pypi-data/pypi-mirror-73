# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v41</h1>       <p>Introduced in Cloudera Manager 7.1.1</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApiTimeSeriesEntityAttribute(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'display_name': 'str',
        'description': 'str',
        'is_value_case_sensitive': 'bool'
    }

    attribute_map = {
        'name': 'name',
        'display_name': 'displayName',
        'description': 'description',
        'is_value_case_sensitive': 'isValueCaseSensitive'
    }

    def __init__(self, name=None, display_name=None, description=None, is_value_case_sensitive=None):
        """
        ApiTimeSeriesEntityAttribute - a model defined in Swagger
        """

        self._name = None
        self._display_name = None
        self._description = None
        self._is_value_case_sensitive = None

        if name is not None:
          self.name = name
        if display_name is not None:
          self.display_name = display_name
        if description is not None:
          self.description = description
        if is_value_case_sensitive is not None:
          self.is_value_case_sensitive = is_value_case_sensitive

    @property
    def name(self):
        """
        Gets the name of this ApiTimeSeriesEntityAttribute.
        Name of the of the attribute. This name uniquely identifies this attribute.

        :return: The name of this ApiTimeSeriesEntityAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ApiTimeSeriesEntityAttribute.
        Name of the of the attribute. This name uniquely identifies this attribute.

        :param name: The name of this ApiTimeSeriesEntityAttribute.
        :type: str
        """

        self._name = name

    @property
    def display_name(self):
        """
        Gets the display_name of this ApiTimeSeriesEntityAttribute.
        Display name of the attribute.

        :return: The display_name of this ApiTimeSeriesEntityAttribute.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this ApiTimeSeriesEntityAttribute.
        Display name of the attribute.

        :param display_name: The display_name of this ApiTimeSeriesEntityAttribute.
        :type: str
        """

        self._display_name = display_name

    @property
    def description(self):
        """
        Gets the description of this ApiTimeSeriesEntityAttribute.
        Description of the attribute.

        :return: The description of this ApiTimeSeriesEntityAttribute.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ApiTimeSeriesEntityAttribute.
        Description of the attribute.

        :param description: The description of this ApiTimeSeriesEntityAttribute.
        :type: str
        """

        self._description = description

    @property
    def is_value_case_sensitive(self):
        """
        Gets the is_value_case_sensitive of this ApiTimeSeriesEntityAttribute.
        Returns whether to treat attribute values as case-sensitive.

        :return: The is_value_case_sensitive of this ApiTimeSeriesEntityAttribute.
        :rtype: bool
        """
        return self._is_value_case_sensitive

    @is_value_case_sensitive.setter
    def is_value_case_sensitive(self, is_value_case_sensitive):
        """
        Sets the is_value_case_sensitive of this ApiTimeSeriesEntityAttribute.
        Returns whether to treat attribute values as case-sensitive.

        :param is_value_case_sensitive: The is_value_case_sensitive of this ApiTimeSeriesEntityAttribute.
        :type: bool
        """

        self._is_value_case_sensitive = is_value_case_sensitive

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApiTimeSeriesEntityAttribute):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
