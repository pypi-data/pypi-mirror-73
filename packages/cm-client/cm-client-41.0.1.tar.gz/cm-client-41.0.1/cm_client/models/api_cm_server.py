# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v41</h1>       <p>Introduced in Cloudera Manager 7.1.1</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApiCmServer(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cm_server_id': 'str',
        'name': 'str',
        'ip_address': 'str',
        'created_time': 'str',
        'last_updated_time': 'str'
    }

    attribute_map = {
        'cm_server_id': 'cmServerId',
        'name': 'name',
        'ip_address': 'ipAddress',
        'created_time': 'createdTime',
        'last_updated_time': 'lastUpdatedTime'
    }

    def __init__(self, cm_server_id=None, name=None, ip_address=None, created_time=None, last_updated_time=None):
        """
        ApiCmServer - a model defined in Swagger
        """

        self._cm_server_id = None
        self._name = None
        self._ip_address = None
        self._created_time = None
        self._last_updated_time = None

        if cm_server_id is not None:
          self.cm_server_id = cm_server_id
        if name is not None:
          self.name = name
        if ip_address is not None:
          self.ip_address = ip_address
        if created_time is not None:
          self.created_time = created_time
        if last_updated_time is not None:
          self.last_updated_time = last_updated_time

    @property
    def cm_server_id(self):
        """
        Gets the cm_server_id of this ApiCmServer.
        The CM server ID.

        :return: The cm_server_id of this ApiCmServer.
        :rtype: str
        """
        return self._cm_server_id

    @cm_server_id.setter
    def cm_server_id(self, cm_server_id):
        """
        Sets the cm_server_id of this ApiCmServer.
        The CM server ID.

        :param cm_server_id: The cm_server_id of this ApiCmServer.
        :type: str
        """

        self._cm_server_id = cm_server_id

    @property
    def name(self):
        """
        Gets the name of this ApiCmServer.
        The CM server hostname.

        :return: The name of this ApiCmServer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ApiCmServer.
        The CM server hostname.

        :param name: The name of this ApiCmServer.
        :type: str
        """

        self._name = name

    @property
    def ip_address(self):
        """
        Gets the ip_address of this ApiCmServer.
        The IP address.

        :return: The ip_address of this ApiCmServer.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """
        Sets the ip_address of this ApiCmServer.
        The IP address.

        :param ip_address: The ip_address of this ApiCmServer.
        :type: str
        """

        self._ip_address = ip_address

    @property
    def created_time(self):
        """
        Gets the created_time of this ApiCmServer.
        The created time.

        :return: The created_time of this ApiCmServer.
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """
        Sets the created_time of this ApiCmServer.
        The created time.

        :param created_time: The created_time of this ApiCmServer.
        :type: str
        """

        self._created_time = created_time

    @property
    def last_updated_time(self):
        """
        Gets the last_updated_time of this ApiCmServer.
        The last updated time.

        :return: The last_updated_time of this ApiCmServer.
        :rtype: str
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """
        Sets the last_updated_time of this ApiCmServer.
        The last updated time.

        :param last_updated_time: The last_updated_time of this ApiCmServer.
        :type: str
        """

        self._last_updated_time = last_updated_time

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApiCmServer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
