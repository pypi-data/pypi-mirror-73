# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v41</h1>       <p>Introduced in Cloudera Manager 7.1.1</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import cm_client
from cm_client.rest import ApiException
from cm_client.apis.roles_resource_api import RolesResourceApi


class TestRolesResourceApi(unittest.TestCase):
    """ RolesResourceApi unit test stubs """

    def setUp(self):
        self.api = cm_client.apis.roles_resource_api.RolesResourceApi()

    def tearDown(self):
        pass

    def test_add_tags(self):
        """
        Test case for add_tags

        Attach tags to the role.
        """
        pass

    def test_bulk_delete_roles(self):
        """
        Test case for bulk_delete_roles

        Bulk delete roles in a particular service by name.
        """
        pass

    def test_create_roles(self):
        """
        Test case for create_roles

        Create new roles in a given service.
        """
        pass

    def test_delete_role(self):
        """
        Test case for delete_role

        Deletes a role from a given service.
        """
        pass

    def test_delete_tags(self):
        """
        Test case for delete_tags

        Remove the tags associated with the role.
        """
        pass

    def test_enter_maintenance_mode(self):
        """
        Test case for enter_maintenance_mode

        Put the role into maintenance mode.
        """
        pass

    def test_exit_maintenance_mode(self):
        """
        Test case for exit_maintenance_mode

        Take the role out of maintenance mode.
        """
        pass

    def test_get_full_log(self):
        """
        Test case for get_full_log

        Retrieves the log file for the role's main process.
        """
        pass

    def test_get_metrics(self):
        """
        Test case for get_metrics

        Fetch metric readings for a particular role.
        """
        pass

    def test_get_stacks_log(self):
        """
        Test case for get_stacks_log

        Retrieves the stacks log file, if any, for the role's main process.
        """
        pass

    def test_get_stacks_logs_bundle(self):
        """
        Test case for get_stacks_logs_bundle

        Download a zip-compressed archive of role stacks logs.
        """
        pass

    def test_get_standard_error(self):
        """
        Test case for get_standard_error

        Retrieves the role's standard error output.
        """
        pass

    def test_get_standard_output(self):
        """
        Test case for get_standard_output

        Retrieves the role's standard output.
        """
        pass

    def test_impala_diagnostics(self):
        """
        Test case for impala_diagnostics

        Collects diagnostics data for an Impala role.
        """
        pass

    def test_list_active_commands(self):
        """
        Test case for list_active_commands

        List active role commands.
        """
        pass

    def test_list_commands(self):
        """
        Test case for list_commands

        Lists all the commands that can be executed by name on the provided role.
        """
        pass

    def test_read_role(self):
        """
        Test case for read_role

        Retrieves detailed information about a role.
        """
        pass

    def test_read_role_config(self):
        """
        Test case for read_role_config

        Retrieves the configuration of a specific role.
        """
        pass

    def test_read_roles(self):
        """
        Test case for read_roles

        Lists all roles of a given service.
        """
        pass

    def test_read_tags(self):
        """
        Test case for read_tags

        Returns the tags associated with this role.
        """
        pass

    def test_update_role_config(self):
        """
        Test case for update_role_config

        Updates the role configuration with the given values.
        """
        pass


if __name__ == '__main__':
    unittest.main()
